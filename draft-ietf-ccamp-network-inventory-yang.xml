<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="P." surname="Bedard" fullname="Phil Bedard">
      <organization>Cisco</organization>
      <address>
        <email>phbedard@cisco.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="09"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management and was specified many years ago. Given the emerging of data models and their deployment in operator's management and control systems, the traditional function of inventory management is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for ensuring the network stays healthy, well-planned, and functioning in the operator's network. Network inventory management allows the operator to keep track of what physical network devices are staying  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when to acquire new assets and what is needed, or to decommission old or faulty ones, which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines two YANG modules: "ietf-network-inventory", defined in <xref target="ni-yang"/>, and "ietf-hw-inventory-ref-topo", defined in <xref target="ref-yang"/>.</t>

<t>The YANG data models defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF_SD2-20"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="IANA_YANG"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>hirt</c>
      <c>ietf-hw-inventory-ref-topo</c>
      <c>RFC XXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF_SD2-20"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-RFC8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro contained-child*  -> ../uuid
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>Some of the definitions taken from <xref target="RFC8348"/> are actually based on the ENTITY-MIB <xref target="RFC6933"/>.</t>

<t>For state data like admin-state, oper-state and so on, we consider they are related to device hardware management and not hardware inventory. Therefore, they are outside of scope of this document. Same for the sensor-data, they should be defined in some other performance monitoring data models instead of inventory data model.</t>

<t>We re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
<section anchor="relationship-between-hardware-inventory-and-network-topology-models"><name>Relationship between Hardware Inventory and Network Topology models</name>

<t>Network topology is a logical abstraction based on hardware inventory objects. The abstraction may be based on technology requirements (e.g., layer 0 or layer 1 resources) or on some specific requirements (e.g., for path computation or service provisioning).</t>

<t>Therefore the relationship between hardware inventory objects and network topology objects can be 1:N (N&gt;=1).</t>

<t>Taking the Optical technology as example, an Optical Transport Network (OTN) Network Element (NE) can be installed with several kinds of boards, including an Ethernet client signal switching board, a line board which is used for OTN layer switching. This line board may also be used as a start point of WDM layer. In terms of technologies, this OTN NE supports multi-layer network topology connections, so that it should appear in L0, L1 and L2 network topology.</t>

<t>It is important to describe this relationship for the sake of network Operation and Maintenance (O&amp;M). For example, the actual path of a connection is described by the objects in network topology. When there is a failure along this connection, the O&amp;M engineers are more concerned with the physical location information behind the network objects for trouble shooting.</t>

<t>Generally speaking, a node object in the network topology corresponds to a network element object in the hardware inventory. A Link Termination Point (LTP) object in the network topology corresponds to a port component in the hardware inventory. A link object in the network topology corresponds to a fiber/cable object in the hardware inventory.</t>

<t>NOTE: take fiber&amp;cable object into scope in the future version.</t>

<t>Compared with network topology, hardware inventory objects are the most basic elements of network: from the automation integration perspective, the MDSC or OSS systems would integrate with hardware inventory data before network topology data.</t>

<t>Therefore it is better to keep separated the network topology information and the hardware inventory information: the "ietf-hw-inventory-ref-topo" YANG module provides this relationship augmenting the network topology model, when required, with references between network topology objects and corresponding hardware inventory objects.</t>

<t>This figure below shows the relationship between the three modules:</t>

<figure title="Relationship between the three YANG modules" anchor="fig-modules-relationship"><artwork type="ascii-art"><![CDATA[
     +------------------+
     | Network topology |
     |      module      |
     +------------------+
             ^
             |
             |augments
             |
     +------------------+          +------------------+
     | ietf-hw-inventory| imports  | ietf-network-hard|
     |   -ref-topology  |--------> |  ware-inventory  |
     +------------------+          +------------------+
]]></artwork></figure>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-hw-inventory-ref-topo
augment /nw:networks/nw:network/nw:node:
   +--ro inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--ro inventory-id?   leafref
]]></artwork></figure>

<t>NOTE: the association between a link and a fiber&amp;cable object has to be added in the future version.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="tree"><name>Tree Diagrams</name>

<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module "ietf-network-inventory" (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-hardware-inventory.tree"><![CDATA[
module: ietf-network-hardware-inventory
  +--ro network-hardware-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref               leafref
     |              +--ro component-ref        leafref
     |              +--ro relative-position?   uint8
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-component-references
                 |  +--ro component-reference* [index]
                 |     +--ro index    uint8
                 |     +--ro class?   -> ../../../class
                 |     +--ro uuid?    -> ../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ref-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ref-tree"/> below shows the tree diagram of the YANG data model defined in module "ietf-hw-inventory-ref-topo" (<xref target="ref-yang"/>).</t>

<figure title="Hardware inventory topology navigation tree diagram" anchor="fig-ref-tree"><artwork type="ascii-art" name="ietf-hw-inventory-ref-topo.tree"><![CDATA[
module: ietf-hw-inventory-ref-topo
augment /nw:networks/nw:network/nw:node:
   +--ro inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--ro inventory-id?   leafref
]]></artwork></figure>

</section>
</section>
<section anchor="yang"><name>YANG Data Models</name>

<section anchor="ni-yang"><name>YANG Data Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-hardware-inventory@2023-03-07.yang"><![CDATA[
module ietf-network-hardware-inventory {
  yang-version 1.1;
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-network-hardware-inventory";
  prefix nhi;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "https://www.iana.org/assignments/yang-parameters";
  }
  
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types.";
  } 

  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network hardware
    inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2023-03-09 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }
    
  container network-hardware-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "The location information of this network element.";
          leaf-list equipment-room-name {
            type leafref {
              path "/nhi:network-hardware-inventory/" +
                   "nhi:equipment-rooms/nhi:equipment-room/nhi:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "Attributes applicable to network elements.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "Top level container for the list of racks.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "/nhi:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "[nhi:uuid=current()/../ne-ref]/nhi:components"
                  + "/nhi:component/nhi:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
              leaf relative-position {
                type uint8;
                description "A relative position of chassis within
                the rack";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "Attributes applicable to racks only.";
    container rack-location {
      description
        "The location information of the rack, which comprises the 
        name of the equipment room, row number, and column number.";
      leaf equipment-room-name {
        type leafref {
          path "/nhi:network-hardware-inventory/nhi:equipment-rooms"
          + "/nhi:equipment-room/nhi:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "Rack height.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "Rack width.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "Rack depth.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "A relative location information of this component.
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../nhi:uuid";
          }
          description
            "The list of the identifiers of the child components 
            physically contained within this component.";
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "The relative position with respect to the parent
            component among all the sibling components.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        
        container parent-component-references {
          description
              "The top level container for the list of the 
              identifiers of the parents of this component in a 
              hierarchy.";
          list component-reference {
            key index;
            description
              "The list of the identifiers of the parents of this 
              component in a hierarchy.
              
              The index parameter defines the hierarchy: the topmost 
              parent has an index of 0.";
            leaf index {
              type uint8;
              description
                "The index of the parent with respect to the 
                hierarchy.";
            }
            leaf class {
              type leafref {
                path "../../../nhi:class";
              }
              description
                "Class of the hierarchial parent component.";
            }
            leaf uuid {
              type leafref {
                path "../../../nhi:uuid";
              }
              description
                "The identifier of the parent's component in the 
                hierarchy.";
            }
          }
        }

        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "This extension differs between different component 
        classes.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./nhi:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./nhi:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to chassis only.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to slots only.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to boards only.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to ports only.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="ref-yang"><name>YANG Data Model for Navigation between Topology and Network Hardware Inventory</name>

<figure title="Hardware inventory topology navigation YANG module" anchor="fig-ref-yang"><sourcecode type="yang" markers="true" name="ietf-hw-inventory-ref-topo@2023-03-09.yang"><![CDATA[
module ietf-hw-inventory-ref-topo {
 yang-version 1.1;
 namespace "urn:ietf:params:xml:ns:yang:ietf-hw-inventory-ref-topo";
 prefix hirt;

  import ietf-network {
    prefix nw;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-topology {
    prefix nt;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-hardware-inventory {
    prefix nhi;
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }

 organization
   "IETF CCAMP Working Group";
 contact
   "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
    WG List:  <mailto:ccamp@ietf.org>

    Editor:   Chaode Yu
              <yuchaode@huawei.com>

    Editor:   Sergio Belotti
              <sergio.belotti@nokia.com>

    Editor:   Jean-Francois Bouquier
              <jeff.bouquier@vodafone.com>

    Editor:   Fabio Peruzzini
              <fabio.peruzzini@telecomitalia.it>

    Editor:   Phil Bedard
              <phbedard@cisco.com>";

 description
   "This module defines a model for navigation between hardware
   inventory data module and network topology module.

   The model fully conforms to the Network Management
   Datastore Architecture (NMDA).

   Copyright (c) 2021 IETF Trust and the persons
   identified as authors of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or
   without modification, is permitted pursuant to, and subject
   to the license terms contained in, the Simplified BSD License
   set forth in Section 4.c of the IETF Trust's Legal Provisions
   Relating to IETF Documents
   (https://trustee.ietf.org/license-info).
   This version of this YANG module is part of RFC XXXX; see
   the RFC itself for full legal notices.

   The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
   NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
   'MAY', and 'OPTIONAL' in this document are to be interpreted as
   described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
   they appear in all capitals, as shown here.";

 // RFC Ed.: replace XXXX with actual RFC number and remove this
 // note.
 // RFC Ed.: update the date below with the date of RFC publication
 // and remove this note.

  revision 2023-03-09 {
    description
      "Initial revision.";
     reference
       "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
       //RFC Editor: replace XXXX with actual RFC number, update date
       //information and remove this note
  }

  augment "/nw:networks/nw:network/nw:node" {
    description 
      "Information that allows the navigation between this node and
      the Network Element (NE) from which this node is abstracted in
      the network hardware inventory model.";
    
    leaf inventory-id {
          config false;
      type leafref {
        path "/nhi:network-hardware-inventory/nhi:network-elements"
        + "/nhi:network-element/nhi:uuid";
      }
          
          description
      "The identifier of the Network Element (NE) from which this
      node is abstracted";
    }
  }
  
  augment "/nw:networks/nw:network/nw:node/nt:termination-point" {
    description 
      "Information that allows the navigation between this Link
      Termination Point (LTP) and the port component from which this
      LTP is abstracted in the network hardware inventory model.";
    
    leaf inventory-id {
          config false;
      type leafref {
        path "/nhi:network-hardware-inventory/nhi:network-elements"
        + "/nhi:network-element/nhi:components/nhi:component"
        + "/nhi:uuid";
      }
          description 
        "The identifier of the port component from which this Link
        Termination Point (LTP) is abstracted";
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF_SD2-20" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>SD2-20_Equipment Model</title>
    <author >
      <organization>TM Forum</organization>
    </author>
    <date year="2008" month="May"/>
  </front>
  <seriesInfo name="TMF MTOSI 4.0, Network Resource Fulfilment (NRF), SD2-20" value=""/>
</reference>
<reference anchor="IANA_YANG" target="https://www.iana.org/assignments/yang-parameters">
  <front>
    <title>YANG Parameters</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC6933' target='https://www.rfc-editor.org/info/rfc6933'>
<front>
<title>Entity MIB (Version 4)</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<author fullname='J. Quittek' initials='J.' surname='Quittek'><organization/></author>
<author fullname='M. Chandramouli' initials='M.' surname='Chandramouli'><organization/></author>
<date month='May' year='2013'/>
<abstract><t>This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it describes managed objects used for managing multiple logical and physical entities managed by a single Simple Network Management Protocol (SNMP) agent.  This document specifies version 4 of the Entity MIB.  This memo obsoletes version 3 of the Entity MIB module published as RFC 4133.</t></abstract>
</front>
<seriesInfo name='RFC' value='6933'/>
<seriesInfo name='DOI' value='10.17487/RFC6933'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-actn-poi-applicability-08'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='11' month='January' year='2023'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models defined by the IETF to support this
   deployment architecture and specific scenarios relevant to Service
   Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-08'/>
   
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section anchor="appendix"><name>Appendix</name>

<section anchor="comparison-with-openconfig-platform-data-model"><name>Comparison With Openconfig-platform Data Model</name>

<t>Since more and more devices can be managed by domain controller through OpenConfig, to avoid that our inventory data model cannot cover these devices' inventory data, we have compared our inventory data model with the "openconfig-platform" model which is the data model used to manage inventory information in OpenConfig.</t>

<t>Openconfig-platform data model is NE-level and uses a generic component concept to describe its inner devices and containers, which is similar to "ietf-hardware" model in <xref target="RFC8348"/>. Since we have also reused the component concept of <xref target="RFC8348"/> in our inventory data model, we can compare the component's attributes between "openconfig-platform" and our model directly , which is stated below:</t>

<texttable title="Comparison between openconfig platform and inventory data models" anchor="tab-oc">
      <ttcol align='left'>Attributes in oc-platform</ttcol>
      <ttcol align='left'>Attributes in our model</ttcol>
      <ttcol align='left'>remark</ttcol>
      <c>name</c>
      <c>name</c>
      <c>&#160;</c>
      <c>type</c>
      <c>class</c>
      <c>&#160;</c>
      <c>id</c>
      <c>uuid</c>
      <c>&#160;</c>
      <c>location</c>
      <c>location</c>
      <c>&#160;</c>
      <c>description</c>
      <c>description</c>
      <c>&#160;</c>
      <c>mfg-name</c>
      <c>mfg-name</c>
      <c>&#160;</c>
      <c>mfg-date</c>
      <c>mfg-date</c>
      <c>&#160;</c>
      <c>hardware-version</c>
      <c>hardware-rev</c>
      <c>&#160;</c>
      <c>firmware-version</c>
      <c>firmware-rev</c>
      <c>&#160;</c>
      <c>software-version</c>
      <c>software-rev</c>
      <c>&#160;</c>
      <c>serial-no</c>
      <c>serial-num</c>
      <c>&#160;</c>
      <c>part-no</c>
      <c>part-number</c>
      <c>&#160;</c>
      <c>clei-code</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>removable</c>
      <c>is-fru</c>
      <c>&#160;</c>
      <c>oper-status</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>empty</c>
      <c>contained-child?</c>
      <c>If there is no contained child, it is empty.</c>
      <c>parent</c>
      <c>parent-references</c>
      <c>&#160;</c>
      <c>redundant-role</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>last-switchover-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-switchover-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>switchover-ready</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>temperature</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>memory</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>allocated-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>used-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>pcie</c>
      <c>&#160;</c>
      <c>alarm  data</c>
      <c>properties</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>subcomponents</c>
      <c>contained-child</c>
      <c>&#160;</c>
      <c>chassis</c>
      <c>chassis-specific-info</c>
      <c>&#160;</c>
      <c>port</c>
      <c>port-specific-info</c>
      <c>&#160;</c>
      <c>power-supply</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>fan</c>
      <c>&#160;</c>
      <c>Fan is considered as a specific board. And no need to define as a single component</c>
      <c>fabric</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>storage</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage storage on network element</c>
      <c>cpu</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage CPU on network element</c>
      <c>integrated-circuit</c>
      <c>board-specific-info</c>
      <c>&#160;</c>
      <c>backplane</c>
      <c>&#160;</c>
      <c>Backplane is considered as a part of board. And no need to define as a single component</c>
      <c>software-module</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>controller-card</c>
      <c>&#160;</c>
      <c>Controller card is considered as a specific functional board. And no need to define as a single component</c>
</texttable>

<t>As it mentioned in <xref target="reference-RFC8348"/> that state data and performance data are out of scope of our data model, it is same for alarm data and it should be defined in some other alarm data models separately. And for some component specific structures in "openconfig-platform", we consider some of them can be contained by our existing structure, such as fan, backplane, and controller-card. And for some of them, there is no need to manage for operators, such as storage and cpu.</t>

<t>Mostly, our inventory data model can cover the attributes from OpenConfig.</t>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </contact>
    <contact initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.comã</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="B." surname="Wu" fullname="Bo Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>lana.wubo@huawei.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Zhang" fullname="Chenfang Zhang">
      <organization>China Unicom</organization>
      <address>
        <email>zhangcf80@chinaunicom.cn</email>
      </address>
    </contact>
    <contact initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
AA==

-->

</rfc>

