<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Hardware Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="P." surname="Bedard" fullname="Phil Bedard">
      <organization>Cisco</organization>
      <address>
        <email>phbedard@cisco.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="09"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network hardware inventory is a fundamental functionality in network management and was specified many years ago. Given the emerging of data models and their deployment in operator's management and control systems, the traditional function of inventory management is also requested to be defined as a data model.</t>

<t>Network hardware inventory management and monitoring is a critical part for ensuring the network stays healthy, well-planned, and functioning in the operator's network. Network hardware inventory management allows the operator to keep track of what physical network devices are staying  in the network including relevant software and hardware versions.</t>

<t>The network hardware inventory management also helps the operator to know when to acquire new assets and what is needed, or to decommission old or faulty ones, which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network hardware inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network hardware inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network hardware inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines two YANG modules: "ietf-network-hardware-inventory", defined in <xref target="ni-yang"/>, and "ietf-hw-inventory-ref-topo", defined in <xref target="ref-yang"/>.</t>

<t>The YANG data models defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF_SD2-20"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="IANA_YANG"/></c>
      <c>ni</c>
      <c>ietf-network-hardware-inventory</c>
      <c>RFC XXXX</c>
      <c>hirt</c>
      <c>ietf-hw-inventory-ref-topo</c>
      <c>RFC XXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF_SD2-20"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Hardware Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-hardware-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-hardware-inventory
   +--ro network-hardware-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-RFC8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro contained-child*  -> ../uuid
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>Some of the definitions taken from <xref target="RFC8348"/> are actually based on the ENTITY-MIB <xref target="RFC6933"/>.</t>

<t>For state data like admin-state, oper-state and so on, we consider they are related to device hardware management and not hardware inventory. Therefore, they are outside of scope of this document. Same for the sensor-data, they should be defined in some other performance monitoring data models instead of inventory data model.</t>

<t>We re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
<section anchor="relationship-between-hardware-inventory-and-network-topology-models"><name>Relationship between Hardware Inventory and Network Topology models</name>

<t>Network topology is a logical abstraction based on hardware inventory objects. The abstraction may be based on technology requirements (e.g., layer 0 or layer 1 resources) or on some specific requirements (e.g., for path computation or service provisioning).</t>

<t>Therefore the relationship between hardware inventory objects and network topology objects can be 1:N (N&gt;=1).</t>

<t>Taking the Optical technology as example, an Optical Transport Network (OTN) Network Element (NE) can be installed with several kinds of boards, including an Ethernet client signal switching board, a line board which is used for OTN layer switching. This line board may also be used as a start point of WDM layer. In terms of technologies, this OTN NE supports multi-layer network topology connections, so that it should appear in L0, L1 and L2 network topology.</t>

<t>It is important to describe this relationship for the sake of network Operation and Maintenance (O&amp;M). For example, the actual path of a connection is described by the objects in network topology. When there is a failure along this connection, the O&amp;M engineers are more concerned with the physical location information behind the network objects for trouble shooting.</t>

<t>Generally speaking, a node object in the network topology corresponds to a network element object in the hardware inventory. A Link Termination Point (LTP) object in the network topology corresponds to a port component in the hardware inventory. A link object in the network topology corresponds to a fiber/cable object in the hardware inventory.</t>

<t>NOTE: take fiber&amp;cable object into scope in the future version.</t>

<t>Compared with network topology, hardware inventory objects are the most basic elements of network: from the automation integration perspective, the MDSC or OSS systems would integrate with hardware inventory data before network topology data.</t>

<t>Therefore it is better to keep separated the network topology information and the hardware inventory information: the "ietf-hw-inventory-ref-topo" YANG module provides this relationship augmenting the network topology model, when required, with references between network topology objects and corresponding hardware inventory objects.</t>

<t>This figure below shows the relationship between the three modules:</t>

<figure title="Relationship between the three YANG modules" anchor="fig-modules-relationship"><artwork type="ascii-art"><![CDATA[
     +------------------+
     | Network topology |
     |      module      |
     +------------------+
             ^
             |
             |augments
             |
     +------------------+          +------------------+
     | ietf-hw-inventory| imports  | ietf-network-hard|
     |   -ref-topology  |--------> |  ware-inventory  |
     +------------------+          +------------------+
]]></artwork></figure>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-hw-inventory-ref-topo
augment /nw:networks/nw:network/nw:node:
   +--ro inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--ro inventory-id?   leafref
]]></artwork></figure>

<t>NOTE: the association between a link and a fiber&amp;cable object has to be added in the future version.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network hardware inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-hardware-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-hardware-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="tree"><name>Tree Diagrams</name>

<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module "ietf-network-hardware-inventory" (<xref target="ni-yang"/>).</t>

<figure title="Network Hardware inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-hardware-inventory.tree"><![CDATA[
module: ietf-network-hardware-inventory
  +--ro network-hardware-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref               leafref
     |              +--ro component-ref        leafref
     |              +--ro relative-position?   uint8
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-component-references
                 |  +--ro component-reference* [index]
                 |     +--ro index    uint8
                 |     +--ro class?   -> ../../../class
                 |     +--ro uuid?    -> ../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ref-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ref-tree"/> below shows the tree diagram of the YANG data model defined in module "ietf-hw-inventory-ref-topo" (<xref target="ref-yang"/>).</t>

<figure title="Hardware inventory topology navigation tree diagram" anchor="fig-ref-tree"><artwork type="ascii-art" name="ietf-hw-inventory-ref-topo.tree"><![CDATA[
module: ietf-hw-inventory-ref-topo
augment /nw:networks/nw:network/nw:node:
   +--ro inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--ro inventory-id?   leafref
]]></artwork></figure>

</section>
</section>
<section anchor="yang"><name>YANG Data Models</name>

<section anchor="ni-yang"><name>YANG Data Model for Network Hardware Inventory</name>

<figure title="Network Hardware inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-hardware-inventory@2023-03-07.yang"><![CDATA[
module ietf-network-hardware-inventory {
  yang-version 1.1;
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-network-hardware-inventory";
  prefix nhi;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "https://www.iana.org/assignments/yang-parameters";
  }
  
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types.";
  } 

  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network hardware
    inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2023-03-09 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }
    
  container network-hardware-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "The location information of this network element.";
          leaf-list equipment-room-name {
            type leafref {
              path "/nhi:network-hardware-inventory/" +
                   "nhi:equipment-rooms/nhi:equipment-room/nhi:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "Attributes applicable to network elements.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "Top level container for the list of racks.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "/nhi:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "[nhi:uuid=current()/../ne-ref]/nhi:components"
                  + "/nhi:component/nhi:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
              leaf relative-position {
                type uint8;
                description "A relative position of chassis within
                the rack";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "Attributes applicable to racks only.";
    container rack-location {
      description
        "The location information of the rack, which comprises the 
        name of the equipment room, row number, and column number.";
      leaf equipment-room-name {
        type leafref {
          path "/nhi:network-hardware-inventory/nhi:equipment-rooms"
          + "/nhi:equipment-room/nhi:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "Rack height.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "Rack width.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "Rack depth.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "A relative location information of this component.
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../nhi:uuid";
          }
          description
            "The list of the identifiers of the child components 
            physically contained within this component.";
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "The relative position with respect to the parent
            component among all the sibling components.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        
        container parent-component-references {
          description
              "The top level container for the list of the 
              identifiers of the parents of this component in a 
              hierarchy.";
          list component-reference {
            key index;
            description
              "The list of the identifiers of the parents of this 
              component in a hierarchy.
              
              The index parameter defines the hierarchy: the topmost 
              parent has an index of 0.";
            leaf index {
              type uint8;
              description
                "The index of the parent with respect to the 
                hierarchy.";
            }
            leaf class {
              type leafref {
                path "../../../nhi:class";
              }
              description
                "Class of the hierarchial parent component.";
            }
            leaf uuid {
              type leafref {
                path "../../../nhi:uuid";
              }
              description
                "The identifier of the parent's component in the 
                hierarchy.";
            }
          }
        }

        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "This extension differs between different component 
        classes.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./nhi:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./nhi:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to chassis only.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to slots only.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to boards only.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to ports only.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="ref-yang"><name>YANG Data Model for Navigation between Topology and Network Hardware Inventory</name>

<figure title="Hardware inventory topology navigation YANG module" anchor="fig-ref-yang"><sourcecode type="yang" markers="true" name="ietf-hw-inventory-ref-topo@2023-03-09.yang"><![CDATA[
module ietf-hw-inventory-ref-topo {
 yang-version 1.1;
 namespace "urn:ietf:params:xml:ns:yang:ietf-hw-inventory-ref-topo";
 prefix hirt;

  import ietf-network {
    prefix nw;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-topology {
    prefix nt;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-hardware-inventory {
    prefix nhi;
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }

 organization
   "IETF CCAMP Working Group";
 contact
   "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
    WG List:  <mailto:ccamp@ietf.org>

    Editor:   Chaode Yu
              <yuchaode@huawei.com>

    Editor:   Sergio Belotti
              <sergio.belotti@nokia.com>

    Editor:   Jean-Francois Bouquier
              <jeff.bouquier@vodafone.com>

    Editor:   Fabio Peruzzini
              <fabio.peruzzini@telecomitalia.it>

    Editor:   Phil Bedard
              <phbedard@cisco.com>";

 description
   "This module defines a model for navigation between hardware
   inventory data module and network topology module.

   The model fully conforms to the Network Management
   Datastore Architecture (NMDA).

   Copyright (c) 2021 IETF Trust and the persons
   identified as authors of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or
   without modification, is permitted pursuant to, and subject
   to the license terms contained in, the Simplified BSD License
   set forth in Section 4.c of the IETF Trust's Legal Provisions
   Relating to IETF Documents
   (https://trustee.ietf.org/license-info).
   This version of this YANG module is part of RFC XXXX; see
   the RFC itself for full legal notices.

   The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
   NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
   'MAY', and 'OPTIONAL' in this document are to be interpreted as
   described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
   they appear in all capitals, as shown here.";

 // RFC Ed.: replace XXXX with actual RFC number and remove this
 // note.
 // RFC Ed.: update the date below with the date of RFC publication
 // and remove this note.

  revision 2023-03-09 {
    description
      "Initial revision.";
     reference
       "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
       //RFC Editor: replace XXXX with actual RFC number, update date
       //information and remove this note
  }

  augment "/nw:networks/nw:network/nw:node" {
    description 
      "Information that allows the navigation between this node and
      the Network Element (NE) from which this node is abstracted in
      the network hardware inventory model.";
    
    leaf inventory-id {
          config false;
      type leafref {
        path "/nhi:network-hardware-inventory/nhi:network-elements"
        + "/nhi:network-element/nhi:uuid";
      }
          
          description
      "The identifier of the Network Element (NE) from which this
      node is abstracted";
    }
  }
  
  augment "/nw:networks/nw:network/nw:node/nt:termination-point" {
    description 
      "Information that allows the navigation between this Link
      Termination Point (LTP) and the port component from which this
      LTP is abstracted in the network hardware inventory model.";
    
    leaf inventory-id {
          config false;
      type leafref {
        path "/nhi:network-hardware-inventory/nhi:network-elements"
        + "/nhi:network-element/nhi:components/nhi:component"
        + "/nhi:uuid";
      }
          description 
        "The identifier of the port component from which this Link
        Termination Point (LTP) is abstracted";
    }
  }
}
]]></sourcecode></figure>

</section>
</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF_SD2-20" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>SD2-20_Equipment Model</title>
    <author >
      <organization>TM Forum</organization>
    </author>
    <date year="2008" month="May"/>
  </front>
  <seriesInfo name="TMF MTOSI 4.0, Network Resource Fulfilment (NRF), SD2-20" value=""/>
</reference>
<reference anchor="IANA_YANG" target="https://www.iana.org/assignments/yang-parameters">
  <front>
    <title>YANG Parameters</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC6933' target='https://www.rfc-editor.org/info/rfc6933'>
<front>
<title>Entity MIB (Version 4)</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<author fullname='J. Quittek' initials='J.' surname='Quittek'><organization/></author>
<author fullname='M. Chandramouli' initials='M.' surname='Chandramouli'><organization/></author>
<date month='May' year='2013'/>
<abstract><t>This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it describes managed objects used for managing multiple logical and physical entities managed by a single Simple Network Management Protocol (SNMP) agent.  This document specifies version 4 of the Entity MIB.  This memo obsoletes version 3 of the Entity MIB module published as RFC 4133.</t></abstract>
</front>
<seriesInfo name='RFC' value='6933'/>
<seriesInfo name='DOI' value='10.17487/RFC6933'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-actn-poi-applicability-08'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='11' month='January' year='2023'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models defined by the IETF to support this
   deployment architecture and specific scenarios relevant to Service
   Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-08'/>
   
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section anchor="appendix"><name>Appendix</name>

<section anchor="comparison-with-openconfig-platform-data-model"><name>Comparison With Openconfig-platform Data Model</name>

<t>Since more and more devices can be managed by domain controller through OpenConfig, to avoid that our inventory data model cannot cover these devices' inventory data, we have compared our inventory data model with the "openconfig-platform" model which is the data model used to manage inventory information in OpenConfig.</t>

<t>Openconfig-platform data model is NE-level and uses a generic component concept to describe its inner devices and containers, which is similar to "ietf-hardware" model in <xref target="RFC8348"/>. Since we have also reused the component concept of <xref target="RFC8348"/> in our inventory data model, we can compare the component's attributes between "openconfig-platform" and our model directly , which is stated below:</t>

<texttable title="Comparison between openconfig platform and inventory data models" anchor="tab-oc">
      <ttcol align='left'>Attributes in oc-platform</ttcol>
      <ttcol align='left'>Attributes in our model</ttcol>
      <ttcol align='left'>remark</ttcol>
      <c>name</c>
      <c>name</c>
      <c>&#160;</c>
      <c>type</c>
      <c>class</c>
      <c>&#160;</c>
      <c>id</c>
      <c>uuid</c>
      <c>&#160;</c>
      <c>location</c>
      <c>location</c>
      <c>&#160;</c>
      <c>description</c>
      <c>description</c>
      <c>&#160;</c>
      <c>mfg-name</c>
      <c>mfg-name</c>
      <c>&#160;</c>
      <c>mfg-date</c>
      <c>mfg-date</c>
      <c>&#160;</c>
      <c>hardware-version</c>
      <c>hardware-rev</c>
      <c>&#160;</c>
      <c>firmware-version</c>
      <c>firmware-rev</c>
      <c>&#160;</c>
      <c>software-version</c>
      <c>software-rev</c>
      <c>&#160;</c>
      <c>serial-no</c>
      <c>serial-num</c>
      <c>&#160;</c>
      <c>part-no</c>
      <c>part-number</c>
      <c>&#160;</c>
      <c>clei-code</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>removable</c>
      <c>is-fru</c>
      <c>&#160;</c>
      <c>oper-status</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>empty</c>
      <c>contained-child?</c>
      <c>If there is no contained child, it is empty.</c>
      <c>parent</c>
      <c>parent-references</c>
      <c>&#160;</c>
      <c>redundant-role</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>last-switchover-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-switchover-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>switchover-ready</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>temperature</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>memory</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>allocated-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>used-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>pcie</c>
      <c>&#160;</c>
      <c>alarm  data</c>
      <c>properties</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>subcomponents</c>
      <c>contained-child</c>
      <c>&#160;</c>
      <c>chassis</c>
      <c>chassis-specific-info</c>
      <c>&#160;</c>
      <c>port</c>
      <c>port-specific-info</c>
      <c>&#160;</c>
      <c>power-supply</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>fan</c>
      <c>&#160;</c>
      <c>Fan is considered as a specific board. And no need to define as a single component</c>
      <c>fabric</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>storage</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage storage on network element</c>
      <c>cpu</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage CPU on network element</c>
      <c>integrated-circuit</c>
      <c>board-specific-info</c>
      <c>&#160;</c>
      <c>backplane</c>
      <c>&#160;</c>
      <c>Backplane is considered as a part of board. And no need to define as a single component</c>
      <c>software-module</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>controller-card</c>
      <c>&#160;</c>
      <c>Controller card is considered as a specific functional board. And no need to define as a single component</c>
</texttable>

<t>As it mentioned in <xref target="reference-RFC8348"/> that state data and performance data are out of scope of our data model, it is same for alarm data and it should be defined in some other alarm data models separately. And for some component specific structures in "openconfig-platform", we consider some of them can be contained by our existing structure, such as fan, backplane, and controller-card. And for some of them, there is no need to manage for operators, such as storage and cpu.</t>

<t>Mostly, our inventory data model can cover the attributes from OpenConfig.</t>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </contact>
    <contact initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.comã</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="B." surname="Wu" fullname="Bo Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>lana.wubo@huawei.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Zhang" fullname="Chenfang Zhang">
      <organization>China Unicom</organization>
      <address>
        <email>zhangcf80@chinaunicom.cn</email>
      </address>
    </contact>
    <contact initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+V97XIbR5Lgf0X4HeroiCU5gwYkWTO24Q+JEiWbEyLFFenx
+WZ8jgbQAHrU6Mb0B2na1MXem9yve5B7lLsXufyor66uagCi5J2d5e7IJFCV
lZWVlZmVlZkVRdFH96bFLM0XY9HU8+izj+59dK9O6ywZiyPxw9HZN+I4rmNx
WsySTMyLUpwl9XVRvhHfxuXsOi4TcZJfJXldlDfYNZ5MyuRq3NOKgH50b1ZM
83gFo8zKeF5HaQKDT6fxah3l3DVKVY/oJs4X0f0HH92rmskqraq0yOubNfQ9
eX754qN72HpRFs16LJ49Ozo9F9/DBzAj8Q1+CPOL62QBcMaiqmcf3UvX5VjU
ZVPVD+/f//z+Q0S7quN89lOcFTlAvUmqj+6t07H4S11MB6IqyrpM5hX8drPi
X6bFagW4VT/SlJt6WZTjj+4JEeE/QvDEni1jIJr4oeEPixJI/G0TXyepuEym
y7zIikWKQ+G3ySpOMxi6mVKvJ0tqOISBOnAvknKRFuJpkhV1nVrAz4o3adwC
V1HT4YSbPsmxgQMzzaux+FP0YiieFs3fmzQp7bH+lMR59KKM82mRVk4LGvPP
xSyeA9Vaw/4tmc+HE9n4yZVs4p3Mi3gCczlPyuaXX9Lcns3lyWkL6BxbDteq
5ZM6yRKAmNZxBpNK6w7o82WaAZVmwIEW2GdpNS1agNfLCTV6MsWvGEv8vylw
WZlOmtq3uCcwLKxBU6U7rC7iCqsBnfrW9yiFL8U3TWFBftHUTZn0Ao+x26Ip
hriVnizwQwT///7tf3ZG+HM6hUmJl8U6+aWXf66o4TDDhl7uYXhPC/H9Llye
xXk8vG4mRR8Zni2TfA4bX/y3Jfxrr+AyzWPxXZ7KXhrsL9hwOv/s/pMpNmmo
xXCad0C/qqZxKb4p8l/iLPlFwCY9TovK2g+vhoFvmTOB84Ch02mbWAVCHS5k
v1kyg17EpdxWMVZelKu4Tq8SYqrL0xc/XRw/jB7eHzMwKXv5s5+ewxZao6hh
AcxNLIFjcDoVL4qykQSZgcQbC3Ea3wiQcZ/xhyAMYCHSfF5g8xfi9PLVxYl4
NLw/0NL6dVIVTTlNgN+yeZrRwAdnr18cDiRCEse4XCT1WCzrel2NR6Pr6+th
vZrj+EPAZlRKMNWoatI6Ga3qokqjR9H9ERJAiJOjs6OfUA2050za5jwuYY3q
pKzCk8X+YUxS5C5EIwZNschJUI9Ihawt2KAHgBL2Urw6e/HT5evoD48+baN1
eXR+Iq4eDh8MPwECzZMyyYFCJ6t1liBsAFDk4mhRJvRnGOtX6yRXlEbt9KJo
8hn3PoCxD1tL96cmw7VTFLfXDtoKxpNRe31yJK4eDANrA1s3z/WgRJfrdYSy
DZAdNeusiGfVCEca3f9sxHAjhBvxlCM95ag95UhPOXowXM/mSNIoikQ8qeoy
ntb49+UStAZo+oY4aZbM0zypRMwrPUO7YqXtComkWCqLQet/bqmXq8iHDDvp
wFkD50GfZAatRd0aHH5Pcc6wL0VdiEkimgp+jStol4hJXEGDuoCB4TOxSHIg
+PSueIrrZTpdimmc43hxs1gRcgP4HFihTGBzl/RnWi9FraTlTVStk2k6h/EP
kuFiOBDFugYBkh06Qw3kRJiuM5EAmKTEqcdiTgpDXAGvIyLF3CFHwe3ygrqo
j4OEVUN0yAqMhNNF2hEhlSQ5hU24IO4g+7ECpBNxVIJghnkSagdnp8dHh0PF
Nqt0NssS/OtjsBXrspg1U6QhfnIWJvnKjJMiZ71JbtA6W4O9gR/BzMFiiKFp
tS9eXVyI2EKhGm4AThDnuEuJ6zP8nZACk6O+QeiKGSw0wJAU18BWchGBaPDl
DRiVcQngFgWoFpA4OVELeoCBBrIA1sdQuyIY8H0KK5PADr1ZOZPZr9wRyVgp
MjBRqzpZgYmK4GEfzlLGV6OOQwXJl1UFsWVS1XqbqKWPkRgGyU20c/BbgQ6E
z3GuRNVpmRJPC5DJNe2rJK8a+h4xV3QFu/ymEsskzurlDWyUJMuiNZgPOW4b
hKumRYCZqBaRJJih2BLRLCuuqxYQJMKbJFkjLadvkHjXy7gGm/GmIvQVorME
bCWUbQAbkUZ8FEKqTZpPswaPWkDjLLmKYcSqmNeED85FIyd3LfMn2AgWjE0T
gAVcJtnaM4m8uGa5A3/EUxI9APUa1rVKamY5mlqKZEtmSGDuOUMzWx67RJHN
8ON53GSwA2CXVQNLyuHQ2CVdrcviymANeJBQRMVJ3Bqv4yluIVpL1Es405Nc
/Prr45PomEzYqE7iKgJFkkfrIo3i9ToDik9S3Hpv36KQjte00dIZTJ13Wpks
gD6KiTK5Yl19U+NEp0UDk9GKoBZHzy7PxCloVFQU5TwGZGGZsDnuijUcA2Gq
RZaMkGdTa/F9osPSAvEV2IfxJEtwkFkB1mKu9msGwleNgboHaA/DLKMJ2gZq
Mys1cHp88QyJj3Isi2+SkqUn0Oz1i2efffLoD0AWOBkRaosC/kHqAO6r+E0i
1gUsIOKAlJGqKK61buiKfFJKm5QdN4UzEqsFHDCH6aDcgkkB/82ULBNwtlon
1OJNsq5FlsLRjYWMGqQu1qT/GHSRZzfMFsSTKNhRTGh5TqxZgigl6Gk+gwM9
oKXoiB/CwvL60/EeVfu7KXRYhXiGkODkBrwF384QAeDxNZhlYHHdCDCY9Dq9
fn5xiR8cKq5GXIi5bO0zkCRjLiTJR9t3moGmALbMQe7ivqx53ZlLEF/YOm8S
0OBIZmkZEMcuSl7PaprkcQmHDwHYThN7GPhCscC0KEEKtTjAz71snOB2SvM3
Vesr3hTKLEi6C2k0xSXBR5sTO6a8eqRZeswt2qbXapsC56waEDTwX8PM2mgC
1ZoXVY1G0xWo5xmR6uRcG0+shdJpCfxhJFN1KPnTlgdhQw1FGwlxYOdilXht
Not7gDXSrJKb9L/wJv0MNmm/IYyUtGS6XBzNnShQcGUXMH04FiAXyC1WwkkT
2Zf2ywp/VUITKcX2WVf8XBRwVkHXDgA50YLv4OLpyWFrM6nFTfgMUAlgN7Qd
gXY5cqkX+r4UaCTPhuLb4hqlw8ArcCwbs0WtJSz4JIF1UAZ7DCuijmFIMOqo
hD5B3U5seU4L6Iuk9XpRmM0VhjZoUcYzmjvHaklMVjVrUidKSE3jCtjh4FFM
S/lowlwp+Y6pDfNuEcicVt++HZBtWM4S0teLBo65MC3cWVUSr7KkqloCQoqU
EeiRUQESKcEDG31DWqXSGxYFXIFEd6ehlwTYNLuR6rOmHkRSFLgL4rkpiSn8
qj0bmJ6ZOC7iK0nssOOY0Hqa4ELDcQ3GLNqMIgVql9oTkjFFMUO0QHMDALAo
AMvOec/qixi2tw9a8WbDW8w8b0raCUwMQAG2bM9stYGFQJOf8UzKStm2cPSJ
rSMTC8FnNvSA01BKlImDk/O2lJPCrVAm0o001WIUVjUbq2rqbP+53/oE3Ly7
NRTL+E770IAnAfg3wItjsUfmnXLzq11j/P17gzar5yndAOAKI5bcfXltXRCA
PIhQ6bg98XPuGjrZVh/iaKu58qEc+OOPxWVSrlKlqmAWZwWbX5Wx8ecFnj9I
kCU4Li5ARyh++vkf7qP5i+yJFnxBHifQTrIhqoExw/ydAGMiJZ+U/JP1hf5T
Kjr9tyFL+6McPtoRzT8+fPSgjabBEQE5aAKp00UjpRCOaVAGMiXWR4hBbdGS
FUAF58kJotRZ3hTFC+q2lPzANhHV8erp8Vi8TuBMIg0j0Ctr0rvTJboQq1GV
FfVIexVGkwJYdjQcDnm6xoWrQb7wkIi0l9LvYDmxpGwZYMsUbFtkJJQS+Qbd
IodSXPmc1bKk6dd4VqcjKZmvcLBleQkTwBNEhYILtq+coDyTgTifA4Iztm30
fgflkFfq/KfdCGBwJ2t0p+V1pnB5DZaphQCclVAlyclJdHAoPByCSEI77hoa
oDbMbjRtNN5gyUjAzxjPTbDlVI2PUIgLWLpgN1pINYRaXt2a2zJxEu2Hl10d
a2hgHe4lUQcC2Qb+bSYR/0bDMQFA+ctxnxIzPYN/LDTXWbNYkN4xA0svIswx
kTY3qoL2euI46HTnETvrGr/Lop4Drga13DocQweakpRwr22Vp8SbErt4fAOC
gS25d/rdxSUIavqvOHtFv79+/q/fnbx+foy/X3x79PKl/uWebHHx7avvXh6b
30zPZ69OT5+fHXNn+FS0Prq3d3r0w57UHK/OL09enR293OtKe9J2BVMYJgjb
syZr854ULizcnj47/z//68EjKUYePnjwOQg5Ke4ffPoI/sATA4+GB1j5J3DM
zT3Q73iyQ7drlqELBK8DgU3QV7gsrnOSicN7Sl+UCV48xWC00bXREdj8KzAQ
yM8BH66XpID9gsSyF2COJHlIVNUAFHB0vcFDXqNVEufSGUkH9pvVpMgqQypG
BiH6TPX7Rtedg95Nf8ZvKXbgDK/Bz+JVInXdiUP7AV3LVdoJiuqGeVd6p81s
isnf0DZBKLhgaxoomcmDOWGtjvr8Hbq3imka42Kqkyz2puNvBTt+prUGkJdP
s9JQsVZGCmNL8+HmpOneqtneih/wtvKUOgvfz611fUR/Y++IfoT6JfjjtuDe
sAo1QSabCP+K2C7sji318uefo17m3mgamd50RbZDb7xnW14L/kWbcd55//qr
vvKD7tQ7T+V3G4xBpNqLZ+K/wo8wVFumpTVvry2oae72/nUsPob1iyTzVHzP
99Xeufqb/ekd/pBssfcWlx2hPp+hSxtFHZoy51kC5j1uyAyFIw2pfSfYPG9W
Ezwl0K0kW//uLtQwVsWVdNyA5cSM9vE7RON8LDtx+1egJK7S5JrOUeoEhTfB
0wyRArUQSy3gWDUD60Qrd6BSR7MUNbnURmjqUyAO7B2paelPR4XSZ0Oy5Fqt
0G0Qg34T6GofhPQonlKkD8sBaQAodtLa2VG94nu1MNY5DeXPNycXUnZHs2SF
v3UdJhUGnrD/K04rcgu1cCmLYgWkAXuRXDzoY3fJJzUNe3nwgFqROdRdC1r5
l8UCZX12MxASZzZxqmW6hr71dcLXSVXSs05ai01uYHXB2ra2DLeNbLiwTTFq
6Jo0//+AH+DbaZpGcH5Wl9rm5/ctyfT7boNbYWGGe3BnCPgzGom//tX96sH4
jL4R8B38cerrSl8L2bk9FI7mwYA/x+a37sreyhk5FiDPanvgNp63t77pwsdO
I5prb6O/jgKQBLf6fRc3u5WmHyFEN17qD8+QG4C9rxn+ddRu9FPr56+/D5PV
ofkIkVBHHh8XWj9hqIGfWy88xhFmxb9I5IHMEntfn1sXb/gxut8/TmDdnW9b
PR2edNfP/ro9/1sSyHjKIHHc4Q74H4tbl8bvPOJWP37CbOoDS7N7tzZHbvpp
zUvs0pNIS47iTezaN6SS4Gz5bJT8yhx67dMyHf3C1tCJ64nt1eCuOm55kMDm
1p4W271p7h3IqNJuy5pjNGUwxzPAF1SpiiPAK5AysfwZeEZW12MD2YKMLDBk
SlTMId3KwhAxdvAZ4nGGBiDv7oCO5K5u0IbJqsnqdJ0xuEqaMui8p4MO+4cR
AI2me+nj/TLJrpKKNHNOcSPGBUD3PS6tiCbf0yCtKxV1KKTL4Zxc9a0rpnnn
iklebcbuEIeDlm80EO7tO5DSpTosXiJvcLe8TKeruti2x2YYtoshE2Jegn7G
w7X3vqrJ0dTEO1XZmajzD3UlhUYxuuPW67KIZUyFPPbf8BVtO+pQHeT7okP4
Mn8p2diiW4PMtsus3RUzRz4i/A5EpyMTAMPTCA7TjlaruuFqgD9feiAKEd6l
MIVpq/LwLVQLmh7s9SVY8dGqaGRsW9eSBVFZ6hAEz/lTil1upk3BCE1BGaGK
Ytr39e/EX5omnf1oWmk4+LmS1XjsHuMHrXbDzT8euCRVWp+3vvJiZDey8Qqi
Jt4JQXsYKdiSWSQ1BCCWJ3hyN7If//IhKsySYZPH5mM4O8/hk74+LeiPO33a
vKB42Che7/cOUcPkdKm5Kx29E6lcs8D53otdGMcwnjtgy8YG+x8+Rsf6CkTV
cYJuDxKORyChjX54pVx6fOmuxHfH0hi4Cn3KgI0FIJKf0wqvd4figgNF6PR6
ouLDyjG5WMU1AGgWi6SiczjKCSIC6xh5CYohM2BIZDdG5CoPoozKAsVPgRb6
ul0FTC6yYoKndZB96d8bdt6cUd4Bujk5/HHZgN4FJoxn5OXP4glqxm7kcCtE
DcCr+3Vo8c13J1JdKLByUhoRec1CR35W44TLUZYCZQSmzVQ66nN3lEBXsDMa
oAN6JdGDvyWIk8TB1g6kQpQJmWPyS6xxgLF0UqxViFAHpx5saMg0Xze1wceC
ba6cyE7iyBxScZZlgeSFfVNT94p1poxcRFWOfqAabEfU8RyFpmM0XxbsrhmL
rFBONIpyZRa1onkcf5OOZpNLqbubieUYUV9kwOAY9pRyvgBaY4hQRmFjsxkQ
ujqkgM1YmrBXneZkauMNz8+HQJt0TvZKbeIIur6jVXyjEAYrq9NBwfdqVvaW
jje5d0nGbKmDe5Xwllo4qIZ9gs9uixxrKZuqxjOGr6HFxI97G9IGfLwFRMUU
j8MNd9AiIXthC4Nhs8XQS0i7n0PO8MzsTg5pt+vkkHm7Tjj5SNHd1yzAbZGa
V9uw8Hcti+uILwVa6DUgZj552NtzCvJglXc6h3vuwB+bjKAdrKAQjwQsjABn
tNfKbtrhh3DTDheEm4Jh6a68Q37Pmv9OdNZ8Z8rbSIQNvB0svL49ij99ll7f
Pg3Rz+7o3avbdPTu1206at25fcetFkeZs+g906f8SJ01lZlrrnbpNCq/DuVT
bYg7R1ODImJMQkqFRp52DID2bZ13OVwUNXy1yZlC3ooMDGWKcDKuNrJtXS0v
3T7akcdafUC2xGHvibrDwBvZdofzSIg33ZUOsaK/HV29tQBy3GR909rV3TNs
ms1g/0dfAz+NfIhqi6ZMrvyCitvN03K1TTuVNbSxXVKmcYZqQs3K3241X0Rt
YvrbUapQlM42tUuraF42NiUnRQHSMfcNjAmvpiktNn4UAUtHdbpKOgxSpr8T
rR8MexjDx2arXuD5UMeGGUdRHb8Bm77rLqIMrGnd0LFNBxdj7+dnlyeXP0Sn
J091CMQnn8hIFzyumvBE2FNvAMoMzgoRfTog655/pw1aobMWk9iQechNTYFB
NDoZ7Xxyk8Fseus6mXQYSumJBsTrdE4AGBioRVPjOEgKTr/pRP6IC5QrKvQO
TmtVUUYyuRShmBBqyytIx292WduZXVaOXysC0xz7vD5P8lEjBSI1BMG3zvUo
rbr+yIFZKepgh7gnP68xY1q5Y5U4xCO9g8RQ+ymwekAi5SDGfsh7ekuSf4zt
zpJrTFLH5TCehWrfKIBOuoc+h8dib0090f20Z2aoUugwOQoj7DRYy6uMUdwg
pbm/EaND8b1y7drpYSpz7DqmMHeQLBRknlqXK/sVhpHlMwkROi7TxVLno7WS
aO3g1BvJGXnSceKnCj9y5QEGa3I9wH+BPbHlrFH5SGlNB2johgtDm2KWTNOZ
cnMQxSxFpUNjZc5oiwhAfR/NqvesoHYy5RiaIYdEyTQIWZM4KMnDjjl5a1mo
upX9E+5B5xlPn3CPlqvUh3yXYqYl0I4cDT+6PYyKwK/xTzyzfBZsplWyD9GW
VghSbScb79KOwkZWC/CYds9wbPmEb2f2PKTYIxbmaKc9mrW18e3LMJm/Q4l2
Va1AtpBpXU7ynUuxXhWVtRXEgY45U6OBzkb49w/JLVjUNfQz8kPLNR0AHV2o
IOGTfF5Ixy05DqfTQmbXFm6WWivfhVDTrq2BFM8UXonyyJLsKjcgcOVEZKta
ukBT3tBaBzXb2QZYeURl7shEQ76L4lswRS6iNQacgiYspBiSF9Fg9RagiCO8
lUVDp+HkDtaVtiQ1CFA2D15hUeyoNN8DIVS/oRQ6MKjShjp87F4pjA+kiX/o
hHoofPhbPdMIHaceINIoLgNg8PZ/Eww+YgQAUODAJgh0OPHfi+BXoe47CQq+
wbxcKl8y6qgET2a/a4Pnk5+mC7np6zTLJDPi3XVTSY6ReWAowWyOv8bmbQOM
70vN3j3HIgpn5A3ybtSWY72bNWdtMDpUzcQemWZ0KNjz7ZsBTmRNQq5k8bXE
rFrYM00F8gXM3quUM3SpvoMMfb2KswY22t6pBZxDXHF/xWB+1LC7KCcPL2Zw
WArn5uS01q0NyFa69ahxo6FVVUtv2J6M5JD5C//e2r/2ePjcQ9NOjIfLbapC
vS64qBSzYzyTtjMn/1pidgInATeQUQW1t3iJcng40ZJjUuWyOzdtCAWYibkR
oF/h2YGCYgcqdgXFNDFFO5vIAMGAIE7n5swIPENE6hxkI4/BwxhyW6ZYM8LT
ROYvLBPkIEwBXIMKJJ5JZ/hb6cS/0rQx3yzhIFdxsObAa+tcpjOaC50uRBPD
fLJ4qkI78Kbo0CvgPe6mTlCf+rTbdnTr/7sbBTZybrr137edULORcytu/nbB
UqChhemtCDa1vnL//qdsykz2j4nuMTIr/Pzr9lB3aPqPtAr/oE1H9p7RW7y7
w29p8zl9+Vc3tPS23dLqSmLObe3EAd+GwLqyKCiMZLg1SVIKYfZMu/V3N9yU
Dp9GxqsAUyWupZDGXAsS3Jg9Dz04svRSh14ahSBLcIRSEzxXm+EbTbHrDY30
6BLuzmEaj7IP/thpS/Nzz+qBtkSBLduu4p+jqyLDSguPw213Mi5ODcixPOH9
nK6alZAfqsIVRo0iTbXt4OQiS8deW6lWlmvWWtPWAfCx8Z3hacu6pCBHLcWr
mNIMtoNPB+V2zo0bmEYY38r7uPjcjacMW7kXBeFbys5dQbhp57og3LRzE9Df
tOW773Pdm24dm7gHb319IRuHm665XqDB3dd0p63AFjX8qyPStuDWuF1zx8uZ
R6pYjxMsxYY7ZmRjSI91/OOiHLqIwrRY5OkvKpHrseUrOUWrX7sgLFdJKusp
MsZoPZcUfMvN4nktj3ee0XHceYPXIvKomszMUcEXK++JAKdyF5IMl63SUJVd
RFBXjaLQqYyT3nQ5UTy6an+/51pTxiyxo83uhEFMk8S61TElo1pOK3nVSSVw
xH30h/OvD4QuZ3uIn6rrBn2i8UHhOl31kmRXo6K1SwrDw8sdcnBXXLfwUNUm
kfWbgil+4Vm3EhM0HZ0UQMytOjj7+qsHcsD4jTrFqNo7djUtjKaMMfQRHRO6
xSWWDaBAMrVqB68uzw5dyQ/jPD+0KhbIAhQcPimTGWD0GYWRkU+nsisoQL/n
uEUwuZkrmAj0QWIGBIDA4s4L7jWgG4JcVnIwoZu61gYgJ5dR91SRdqYbcoja
hSagn2oFyUJBgOX3x6cMiRI+uKwHqjGrxrUsQIRjnj1XqlLmfESMRWeNQDnm
fHAmPynryLRW926mZsDL+wPx8gEt9MuHHThWoTzjZ60LfexlzNr+Y3Xnh9UB
rTybVyq0kcY6tYIeD179y+nhEOtMG94gwUg3p8zvlDpiJsXFApyjt+JLq36q
noe+ziplpOw8TrOGtH5B3EqOVwWexwe0RIL5MAmV6yil/4MKuZS5lfhvynaa
ME0rAHSSLFPpg1N4KVSJWGXRoFSHpSlqVbPyG8xDomtjkAe0oyhJBiseyFTf
UG08k2FOFYY6mTVOf9+V75F4meZvZGkhnsM58evBy8vzw50RoH3dvffzDozF
AHceYA5cUI5YN26cHamGV5fPx3Rrz33/xekLUPleu+XLUnkkMiNshZdws3Y9
S4XjoFeoSmFMNyxYIXpq8lrMhhmb7Je4qYuV4itzGQ0bim6T0yu5Ybw3tbTf
VbeE0Q0lC01YU3gLZzrahKsBggqpE1PMtkqwFDrFG/gWrlW8VO6I/rSssbxx
ClfmsmsomGjsrliSNancQsDtkpL+CtrmolKrzKBO7NZ46LEpdHGzltMQS4NU
vQn58D+s4qIKnwWPHt30cJ0Aeys65tGt/op+VlbBkdvNANXPf3fP8e7fciHc
+MO+IVpWeXhGHS65lUqr0t/aseD2fDU/ESVMhvfX+K1TOOROqLY9GHIFt8+T
NYvfLR3SGynv3Tz4xgwthhjl12NVc8/6nX4tZvyOgb5hV2D4ZlxfjG8Ja5TX
49pologsoa0G0Ecolt4oGGURHtayTKKYdQhd7/ik+5KLF2MKxGxmasx6RDze
iMzBEsd4nxtxUlUNxeAcczlxmU1kxDHJChS9OpLJualONLBRBcaCqsgo7YmK
bzUo/VOlnqJ6QYFU3eTTZQlW/S848qaUTzQqJqluB2cXPsKZS0F5Qa6rRcpM
D1nsQyHkyXyOTSYzWDs42oRyixGczGsiSxctMqtIvK2QaGHIKr5hsqjpmBRS
WWberzlJa2JMXHYj17ECutE6WlGmuOKVVY+lk4E6bUpqSaVZpdyfFXRKoIOp
RfOYTcIunkTBisuRAq4ln+m7aKs7XLDeybYwtlBbbawmeHgAdDEAY8GZqdRB
Z01jWIG+0aXqMRxAQOk5qHIqGRKYcIFOJDxwAxoGfIK1PrCw59owN74YBvKf
UjEeRozwMYRWZXnsQrG4HqqxZ00ueZAJJTKDLCIQSHgM6OI1BrGNp2xHV1uE
/xecyIhmATofNHNFFjIf1Di9qILjESIQ2HVUJ5wFLDsvSnRDQgNTw5mz2rCs
GsirnKPKlNjFKrAqdEONqyuTenlXXR8P7MBFnc+t6g4Yn+SAJJU8P6qSuL8k
drVj+lIeQqg0M5kwfMjhaADtqmHXQmD+HhlDW8BMQrsqXFpZdWLlAdg/CBqL
01jLBopGkoXa7YqBWMCf+qacCvbt5eU5rnBdTIsMtjMdOEG6y3vU8HAmvrQq
sisuJKzgyEhEu860FUJPX+qyrqqisyxYTLirgs7yEKqrbnEtcV1Bwionjgdw
VbNYKhpVNqInTc7zmoAu6eD6B+Ka1Qf68ohdrNcLbhKsJuHWYlejXCe6QqES
j4pVmbe4El4wYIxYwmyLgaoccE1T889MSx4uVsXx0XL0gXG34GTgUBJP31Ds
Bu4NGBYJOqWgWrdAuewBe2WKpVb5aQSV2oBasV3mQKoHU6ZZToCPNlRm0VKR
0rrhwltGSJLs5FgCLrkcCkswAV7tyl0OKGv65G2YZ8nPOGVifjeOIK08JaYH
XI5fqjLZnTD0UbJFHx9v6UqQlby5QfOmHfRN1c3FBSaTUp1dKyoIS1FvFsAm
7INjPtgZQ1Nlt1nR1FExj2hcZZtRMP4rwlgZKaby8btXguiqQCNLTMRST2FB
S7zbLZ2aLTJpGvGUzjnL5/8Hip9Sx5GYqgxrrzdu1+sCq97QAyuWi81+yspo
iWnLguPZIVeoYuCJzm93TsOVfD3millJnvX1RYAR1jdWgCMVh2cvAIYD1dof
6JQOIX6+Zh0lmdoK/7/G53nQ0Chk0L4x9Kv2YaiFsUMqWRimE4/0zszRY3l3
Exo46N73JIp+3albFqX15Ip5H4T4jkVPD+chvd+lyD6op3lcfoiy+i/+05aw
H6rUPqqNy4U27dq7lfo+TyPT5OO+ikdu6V4ut6j6v+24j/BjXV038BqPxXzS
4bOxir44sErn+5P1tkzSv+fefXubaMeAk6CvvTd96fm2S6s/Ob/b0pua323m
TczvNvOm5XebeZPyu80oDKXlr/NFozgNQjTooYTdqye3PtSlJ7M+1KUnrz7U
pZVV3220ZU59T8fejPqefr359KHZ9MQAhbr0hAKFVyYYERTq0hMYFOqydUWm
LgBhhAO1b/8E18wa2oK/fTdV5SRSVUgey0l+ZosiN5rHCdAOxPLc64wWLmHQ
bRsoYNBtGChf0G0YKF7gGTpxtpdQBNymcEEXXiAeqdswEGLUbRgIMPI33BBe
1O0UCC7y4OsPLfJA9AcWdRsah5A38aSTWNAND99QrMGigst3dv9gwQYRIIjd
OVi0YZvOwcIN23R21OlunbuJ+60fK4s/CKGTzd/6Man9IQA60TNDgdTBxVIk
wb6+jMtul74ETZ126e2mx2vnXva31aRlEvD/04f9/XQ+pt2vj4DdGgmtn34G
6BZO2KFzt5rCLp07JRZ26Nytu7BD50By0Xadu5UcdujcLe/Q+pG1HvomTYI9
xECbRL0NrFsMovWjKkOEuncTI7sthZMg6W3RnyjZA1QnTPaD7SZOhmHKBMp+
gJ5EyjBESqj0fi36Eivbd+jy/KuuzTvnZ+Mesc/Dex/dAz4nIw13ylebTr1D
7Mz37LJez91O7RrA+z22B2JkDuwn67Y4sv/zRAvoXBFJb8UmPvZQrsQ8vkoX
snbjRpbxksrhFqK7960V2wtkWr3Lkyy0nghCLeXGB3B+RSrS4zzS8SkeDB98
gR/Ss0lrfG2GI132mjIfI7gxOnZX1fjnVTbOqzHJ003uIoIoH03Kl+kXnMLI
gTmdB4J+5QFlc/ziC/6kNFVQWDzsyWeDxqoQrCHZJYIa8sBv8R97wNabQu3h
+OGh4IDLul5X49Ho+vp6iE2HRbkY8as7dAYc0TyIQgmwbBVAwHlQyUEBvrjr
jAVTGLCLVfCCXMaT55cvxLNnR6fn4ntYLXTrf4OX79yRdMZUxo7tff+N+D6Z
jOHXL9XEUf7Qc/VJSS+pEwGuF6PpNF6tR19LPKHjy7SqoeeXWEi0Lsb0/RPV
42udw8rvHOEQz5YxRrb+0HTSUL+8aab05ZNlE18n6RA0qw/CSR1nhXjaVGkX
BL6HVgwn8N0GIEcpfC++aYoujBi/WjQFTfzJAmcWgnKRlIsUcAGxXtcedCr6
fjjh75/kxZs0DsH6Exg80QtMbyvSCh9ThoM25uK7MP+WzOfDifz6yVUxi+dg
foSgvogngOB5Uja//JLmHhTn2GC4Vg2e1JgnXeB9HZzFhmn99Z7cxtbBTvLN
pYxEQAlk3qM21elkWR9fHBNDcB+i5Kc5JQDKGNniAVXuGHhG9eDs9PjoUCZK
8b/PivVNiW43MN0OxcP7Dx8K2iyXZSNjYCjMG3Y13S8SnuaCHW96mnqJb7dL
fT2lyh9UkZrAYjAqlUqe6Vm9TmZpxZfDKh62oZeWBIda8I0t6L2SnrBcVTIa
tZDLj39g9j3XS57KICUsn4DqssbQinVTVg1H7HPQUNXQBTwDkNTL0mmCYUOc
eqAPrIAIR2G9xoQe+PvpxTFsbGrL/bH+yxwf4UacL2Rc/qPhVNHAEHC/Ei+T
RZyJc5WeUikaoLON60lQ82N54ya/P1Cip0YwSWLEjsSaLMJDi1Ng/kqbta6J
lE6suHAEfKfeb/sCJiJnVMsX1dK6SrI5sSvFwWSEfF7UqSr+pNjSPD+5j89O
7g/4v/iIJP6unp/E3+nVSf0Lg5DN+OVJ85vprh+cxD+dNyj3Bwxk//Toh31e
3331EOW+2PohSgbivkYpHjwSB0gLfIvykH/FlygPvQ9RavLdiO1eo1TyYzQS
/OLdcOx54U4mgNiP3FE9Sv2KnQQh37Jrg2vWeNLjYgv4C5vZOmWDPpNssG4m
WWoqswIUZxwzAv5PpbihnPgkug///7lS4x15iFoXqwTCNCRf7vXpd5r8WBzt
aAAOFVBE3jwhuBVNB4pS+I+B4sbqu9TQtg3TxFSi2WRxqleZxRz4IvkiTLdL
vt6PVN04NYAKKDBRD045bzsMQhGGHiVxLhAjFXlot3E9++1G2prTQYtcwyRi
T2Bkhfv0cMQRyc5i7k/HlFVRMOZIZogS8NTUSVPVU03VnHYJlsPO4+Ms/jQ1
qBQQeYR/VTApWEt7gTU7edCHCXxHLxDgIwZKCVKsAxOhg96hHvetNTzV2WkP
z+6hDWMfcU/kgp4hWeCw34Di9gwEkxHFdcZKGT+nk0cwzyrHmy5gIdAZ+0vg
/yzZNxAUB8rB2TyI9VPK+gWDOL9BJ5OYNSr4xsCQfbN0nmAbrVXw52SOL0ep
x8sBEBU44jAdGRstn08C0c912OAjamSA6Dd80LKmGGL0hZv3IyRQGR2jHx6I
MwOCSox6F88O8dp2DcVeDEbGzyR+7I89EYK+Ifldia0H05stlj2Ja3zRiOpx
JNNKrqMCYbORyztt6uA/LekQlCZ94uGynRTufxm80iN3Ra/OJvu1fytdyoeb
2nJVlcYMDihkdTsnsO1XAxnNopYYCWAgcQiNSBqrnQVoISEFdkgAW+1sCumL
TBvfIHoKQV9ap/tIlsrEtzFk3o1ogp5L0jYOkqmlB8v9TnAi7N4oX6bjsJId
7Qn/I4d72M/RgKPuZwweS6h90Qbztv1nkGAw0pl6drutlijQXOY+YiqEfJYE
Q9pdEPLB4lxHR8bYQ8dCy350WJJp3y4EZ2hnVazJvHX4CVik5W92rQTd0NzM
dpu8dYSCKxUCQ/QaDVbxBFMKoi7C+5TEpn3/9S7qFtkfWGtWlCbMTfvPtCXM
oLQIOXvu1Rr2jdj7wkXB3BUXdUe2g/rC4ZUW4VDovJnH5FMotTQ4ex4ajYxs
j73VupAKj6wOLGZUnKVEJTBJ6y7vfdGbHTFcJNHUrZU0V2G6if3yg0lQASz5
2GwqPEojRNYDdIs8WlCseo92ng+9BpXSI1qysjpKFjq/+1nQDtB4bzxIQNUZ
tcN/3pWx4j/eBY00n+GJVWYbGYQQHVnonYCheHGOQgGhFDoc7W6phESvUcPO
WHezU8KS3qN234OV0lFq78dIIbbwGyc+tujBVnDBaFOdoO41YWTMfRuC55m8
mF+xl6mirTqt88Lp3qaRTQ5L3Zol5VdrtzXIirUI+QTUGhFA1xLD76jmm2NZ
efigFwOHH+STu8wFeCRtzX3o2lHb8oNuS9GtG00SPcNOyGXXkMQJ7/nCMF1c
e4ngkEGNpgjBJdy6EPnwz4N3MNtkAuPPVmbwnq/n751uymLyfdgLALmlO7OO
jbyRgJKErdcYPGc9taaB14ZIdUrqmwLsXfw62NFStONk/wOuyF/Uinwlc7oP
DjEojFnsR4JkTPVeLHSz32SRO0umtk5ojV2u4KRxdV9jF07cdu07wc7B9aeQ
Pg8xWmbqkeeNyI5k8Awg0d6IdetP3xGu/9jVI0jf6eDFgh9vQTwmTisnYRsD
p09B87P36mnSFVi86o1tA8Q+mbRV0ADzF7TtzFyDeQnyI9tgQqbY4KcIi4Pt
/BMeN0RrU6rNuIVbwmIBn+tPeiK6Npv2Q6SVLr6tXBEG/tsWVUwKSIcYnM6x
hRV5YrzltKryPkoajz4cW1bgMtka21biyXtDuFvmzK5g3t3efBOOmHQRtQ9D
nPHiHIM4sUR3a3J8pmiVZllK4TUbzkdYbl7C9Z4DuTjwex+RwAY85usPMSCB
9Ts4TLbONsNi0y2Ovm7hXlNgwlvB1z1ztuSxx4G2+2FT+6IMNI80tkr93ums
6RlEm91Ki9/9hOm8nkjWdJ+X+d/liGkp+173uP0kkA3gJFepslwChKLj5CwH
7SOr9KgAMPd4pHLa+Ukc/AuUEFZrGXesqH2wCL/6MgcpnpBO+/ovo/KrL8uf
KGvh6x//MqqWX31ZLeXfbm/4+idq8JNugnV/f/zxL/BNBp9nfR0z6pi1O47W
X325Vh/933/73z/+uO+Q2K/qWMBT2YnuElo5Ka4th5WaZIzjWOtlghNyjfcu
P672LG3rgQVXrTSbUpUAaV190k/ooNIJi5DjUQDKJ48+CwVH6KAIEwU27CFg
1Dkrp9nMQ8/AuYdNHTxleA8KW9LQ3vNUIsG8+6cDyQgvSyA4eEiNzFFx8iSg
bYrgedDlpnaWkY+t0GBwiVBSDZa9+8DP4uGDR58++uyTPz769J0p0T07uE8m
kg1CqLa7G9kbr7Caq4qbQCdyW9HswGz4IOdYPOdrenyn8+DPMrDs0aHwPK0i
f2CUc7ko/Jrj6yQ7L6oA9c1vRuf0pG1t6SIzwTMbHWXtMwT/eNiQcaq6Qp0C
vToQ9JuOPhecZ2I+jxwJxnd0yQU2kzsLF4YzKzMLt6H79yXVN8HsNx3+3aoG
piGNVdESqmLngpHvTy7lc50EEHC93znP06bl7zsH9p7j+mZnnh7TkMu7C7vd
Q0veOcSH1JfGvcfVpMUu/z/5bBDSFv6O/rk/I3yUSalKXXmeBN1qdu3IqjtM
zu+C2nFul63N0F7cfWcr32lt2x4ZR8X476E1XXYyPd/lTjpofvTeSHagOmAs
uup3np37SIu+HFZ8kM4dKLLA1uFvqp2UwfQ6ueozDewU2A+xbgr+zuv2W9Lq
hURyA6388Q3vj1abYh3+IWh1IZHcRCt9Ef9BKNVzI/9ukqAF0QGhoh/+gSSA
I8Xt9aGJnDWhW9lAdMy7r83GkBntVgy5CvrWpQWRhvI90bPT2pjV6Dy3aMr1
8Q17WtkF6ehFErLTvUfeffP4KaZz2JIV/7alB+dzuP3NntmnsF4uREZpGKsk
xuvBeZPxGahrXTpOJWZqpBeTEzDeV6u+3534iWf9LGpbkT8ausvinVWmF1Xy
NzlmhUi7ksOayf2T6wwP64eCmWWdT6Z2nTqOcPy5w76xdsrpfHEWvnEIB1jh
z/sRY33BVi6DdxbAv7OczeRA6Q/HCsZgdaRZ7x4Lc5eZbpit9KRC/L0NW2lG
6vDXh+KroDwmF9YmPlN1Ne7OZNbcY3pmNuIUZsoFo1QCdNyTu9VwnEMl5URo
v/beanKkMhTaJXcpYWEVr3kRaGq8RE53iz5HiNXJMZGUY5GAhy/ohd/cge4u
pqoyjHmV/AxagoWD02rFL0tjWgcng8ki5Vzg2tXu6S+cjAl98fEvegwI3c14
16FLkarpdMV2dy5yE3Lxb+U/5UeLLRTdowZVwa1kIXa3BK/M8vsgclBi3cef
XLrFw52yaMvu7KnjG1XtVXzzrqg77idXQ9h1g1HHJtkskllwdG+Pt1376o6K
5e0QBZADxggJ6TurTI6N2K/LBlW4EScaodD5kJ6c8iIDo+PLV5Qt6T4ebrCJ
OYETc3tjbOFz+Hb8cP4BB/ZMKAlv36pe64AoE9D1uXz1TBPlg7DZSfXi9Xeb
jNJ2ELVms55A6k0ctyGymvN8Zh/gMOWYGseAxcYLC0DN653nckQ77zLN24pP
Pfd4/Mb7b3G6tAnyHZjWAWq0ky82RUb2hwRtAuO5jzaZZSc5lS0WKXEKviVX
hp/btK91SZApMCpVE0SSfHPT88rs1N2eXcT1melbROVaP4YFYsGU7NZvVnD+
pLwn8VwvXSfWk6CmVneSl2j11fKdGDUfxmFqYSfvGyqn+ra+mV8WGKLulMna
fDefVtZkWGub45d5asRgZnrTCIl9A0SL5wmSpecw9mQ5OvGV2JeXprLpvs2X
VoiBr0JX8MJG+PakHa8gNyZXPzeMgFnsVC+h3V/NohWMZm8XH3K+MGI3lE5R
SWO2DZ1U4wClukXHfisy4cj0XGozifj3AL26KO5ALFlrwkMpfWFhUYtbB0jl
Kaf2W9GK3zANEciD2A4UoliPLemDbQPU6RaH+62IQxMI0aaL1jakGY0uX4mn
z8XR8fHz4zHHxEyT9Ep5G0MarHdnMz0ANBX+YOntvnk27Kg4reEuPM+YtGNg
PYKni2PPbvrgCOLYG9Dr4+UPjh+/UtyPYA9DfXD8+P3ENnpvPTUY0QLfogaj
VYxn76N7XOkIiyVFq7h8A8r8qz08W+0J65ut6jM+0bVYPh0iKu1SjRtL65mK
f8qYuLRfX3mn0nveyoC0Xr6ie6bm3uZqe/4qjwhFlpFbpiUGc+Jy2WXnVAyh
FJKqKF+45J18jGRTQRpJKzjlOhzsGdy8sulg0Vv37r1jEa5O0ypVGEToP1yh
HvhPpyJgf0FAux7gO5cD3Loa4BbFAHtrAW5bf29z+b1dq+9tU3xv69p7m0vv
dUGeL9MMpjsDbuuAWy8n9MWTKT4pSjjtsWRw1cHGyn15V0i2Kvc5r5BKSMiS
vseWsRyRnMrlctf6ftRtU3U/atQp7PdgU2G/O9b1u2NZv7tW9duyqN8FOs55
km5dv7uX9dtQ1W/7on7irhX9EN+tC/ohG96tnt/7KOf3Pqr5vYdifvXOtfzu
XsrPquT3Xgr5hev44RTfsYqf6mY0edfh+X4MhPdkIexkIuhnLvc21OXe2+AZ
NQPy3QXel/EVikeNmMsW6/bMlvzPZcbrwdnzQzEvKTuO/ZD2deakqul+bmbd
4dl5s55X+/gpQkVz/lcG15qy4m2ngqd6YTi2c/uUSDcD2sqJDCRJeyJEW+GY
AU+IXiR/XOg2JFcgupR3870Yi22Zylvs/f1z2ss0f6MAXJrhxDkOJw5eXp4f
GssATw7GnRwgBHTpcOA/PeuZW4P2n57uPVwaSNwNBC33rkZrYcNL28uwHdeG
ch/s+HDA3fwc3gO+cXF8brk4PpZmsXocs/sUrhB//fJoRtUo5W2majtttf2a
wYHJ15SbIVWqmRfIydHZ0QYA1MTTOYoieqiYAR2BCZLP0p+l8+aZjrrjt5tf
wbe8KyLQjjXKAkvXYqeLFPNL6CllegAUf+ECSZWu1ymveCdwcinofWPrpfl6
CQfiBY/0jEYaUDXNqyKVVT9hBT1nH8y6iXO86NNvqlZ65H2nA72fS+9368I9
Qaja8NkrupPfU43UG9LSQlKd6RHxupBTtgawTQQggJktWUs+MltQqbSXrNMr
DzyV9ay29cJ1kePD3PSyr7RR0TaHEXPKmOFlsetalPaD2FW6SjN+qFbuE7kZ
1bTtJ3Q/e/t2KHj1FXFBbuIDf0yEVmCaQgzkjA2A3lsPLAStGXKQXLI2RDgb
tW4RWP34l4zMbxhFPu2iHl+3J15TCBxZvmNckFthVaVAJKdmYUTnSw0bvgLb
DySQ6P7cItQo+CPCX/Z+hVApos//0/PlrfdTgyspvhBUvkV6B6g9r+Tdhh/R
2wRVpzL7uga/3ATV1p2drsEvN0HVsd8+XINfbgOVziYhqN4vN0HVFo1yEdhd
WylHu0DVkdk+qK2EmF2g6vhuH9RW6shOUGVMeOH53k6ycL/qh8pxzR6Y2NUO
et4J6jRL0ghtHR/UcFdx+fS4ByqdZum6ytNVBibuNiBCxYLYEcrdpiNGenEl
Uc1qwgM1Wa3BZAp0dbLRH1tfnagQIzrvWg49ajkAJYrfEPShWULUbP6hdMK3
DnvdkixgmjT5LKaqPA7F77CEIKzrqALLZrpEYwnwiiu5Qe5AbBcq1WLfAtct
oJbJpChqG8/3CNXC845Q2ySd3bS6vjPUGvgMTXb0tne69kCFTmRkoknWgs0K
ArZx6d8bd4CK7gAqlRSti+u2vLoDv6IF2QV4V6jraRo2aHqgxmATg4DvLhdD
LVGU4fMR7xPXqplYUYNOV7esxlYDkoKQ0SRehPwBdltAJa9B4HtfDNF2uNLy
R1j2KHO59g50ncc+G3Ez1BeYDFG1ot/xCKYziSjMZCiO8DauoMwIPoThNZ9s
muaLzD4TKYQmeIbbGaEN7AOHKTyA7jzNooSzKVcNwmPTyTlIo+kyJ//LwJ6a
POGqgUBKu+UTmePWPuPgAyDy7Pw7HxLy0JHXyaIkMTVNy2mT1tZQvhjAjQgi
VPSiwKkw39Xceqr7eThKXba9M0NpS1de4G2LVT9DGY9NNMW4xW2hPjOeHurX
t4fmTT7lJ1LedfboVKzjSVRMlTvRcmgpJ4HxEQh9pkcW8zkhKnYCHlVoASJD
AXrsfaYXX9m4i4w/gxxWlnZHuB0FSkmlDa2yzjJCH4Lt+2CDs9Iv8ZAK0iDh
W5NRYr1FRNGVVG3a7sEzgcMKxjvVSXbDhEW41MGNM8f8bhXHTg4Or1uF/TNy
LeXIZEWvlN+vVTsVJ0gP7FDAogI/kGlZFQrmgdlRA+2kspjOQVuONmhZ7o5U
wMb89E6Bni41mJJaNMi6IR/caVHVGYiWPnej8TXa3idykzsePeBEPsEls6/2
6EJBuZOPppg6mSWzhbyy/+geVd6zAyHsm+hrWucsfSML28b5G0bAdPj118cn
0THd80c1mMxRPK3pdidSsYbkjwb+RHos46tW+iH76hbxWt5d/r1JS/k+DA5Y
potFInOTqPg6Y9xCMaZi5exY5aJxb8p4NSuuc2r9/wGkJOmWrgABAA==

-->

</rfc>

