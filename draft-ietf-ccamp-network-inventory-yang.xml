<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="P." surname="Bedard" fullname="Phil Bedard">
      <organization>Cisco</organization>
      <address>
        <email>phbedard@cisco.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="08"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management and was specified many years ago. Given the emerging of data models and their deployment in operator's management and control systems, the traditional function of inventory management is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for ensuring the network stays healthy, well-planned, and functioning in the operator's network. Network inventory management allows the operator to keep track of what physical network devices are staying  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when to acquire new assets and what is needed, or to decommission old or faulty ones, which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF_SD2-20"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="IANA_YANG"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF_SD2-20"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-RFC8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro contained-child*  -> ../uuid
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>Some of the definitions taken from <xref target="RFC8348"/> are actually based on the ENTITY-MIB <xref target="RFC6933"/>.</t>

<t>For state data like admin-state, oper-state and so on, we consider they are related to device hardware management and not hardware inventory. Therefore, they are outside of scope of this document. Same for the sensor-data, they should be defined in some other performance monitoring data models instead of inventory data model.</t>

<t>We re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
<section anchor="relationship-between-hardware-inventory-and-network-topology-models"><name>Relationship between Hardware Inventory and Network Topology models</name>

<t>Network topology is a logical abstraction based on hardware inventory objects. The abstraction may be based on technology requirements (e.g., layer 0 or layer 1 resources) or on some specific requirements (e.g., for path computation or service provisioning).</t>

<t>Therefore the relationship between hardware inventory objects and network topology objects can be 1:N (N&gt;=1).</t>

<t>Taking the Optical technology as example, an Optical Transport Network (OTN) Network Element (NE) can be installed with several kinds of boards, including an Ethernet client signal switching board, a line board which is used for OTN layer switching. This line board may also be used as a start point of WDM layer. In terms of technologies, this OTN NE supports multi-layer network topology connections, so that it should appear in L0, L1 and L2 network topology.</t>

<t>It is important to describe this relationship for the sake of network Operation and Maintenance (O&amp;M). For example, the actual path of a connection is described by the objects in network topology. When there is a failure along this connection, the O&amp;M engineers are more concerned with the physical location information behind the network objects for trouble shooting.</t>

<t>Generally speaking, a node object in the network topology corresponds to a network element object in the hardware inventory. A Link Termination Point (LTP) object in the network topology corresponds to a port component in the hardware inventory. A link object in the network topology corresponds to a fiber/cable object in the hardware inventory.</t>

<t>NOTE: take fiber&amp;cable object into scope in the future version.</t>

<t>Compared with network topology, hardware inventory objects are the most basic elements of network: from the automation integration perspective, the MDSC or OSS systems would integrate with hardware inventory data before network topology data.</t>

<t>Therefore it is better to keep separated the network topology information and the hardware inventory information: the ietf-hw-inventory-ref-topo YANG module provides this relationship augmenting the network topology model, when required, with references between network topology objects and corresponding hardware inventory objects.</t>

<t>NOTE: add the figure with the relationship between the three modules (see slide from 2023-03-08 meeting)</t>

<figure><artwork type="ascii-art"><![CDATA[
augment /nw:networks/nw:network/nw:node:
   +--rw inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--rw inventory-id?   leafref
]]></artwork></figure>

<t>NOTE: the association between a link and a fiber&amp;cable object has to be added in the future version.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-hardware-inventory.tree"><![CDATA[
module: ietf-network-hardware-inventory
  +--ro network-hardware-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref               leafref
     |              +--ro component-ref        leafref
     |              +--ro relative-position?   uint8
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-component-references
                 |  +--ro component-reference* [index]
                 |     +--ro index    uint8
                 |     +--ro class?   -> ../../../class
                 |     +--ro uuid?    -> ../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info

  augment /nw:networks/nw:network/nw:node:
    +--ro inventory-id?   leafref
  augment /nw:networks/nw:network/nw:node/nt:termination-point:
    +--ro inventory-id?   leafref
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-hardware-inventory@2023-03-07.yang"><![CDATA[
module ietf-network-hardware-inventory {
  yang-version 1.1;
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-network-hardware-inventory";
  prefix nhi;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "https://www.iana.org/assignments/yang-parameters";
  }
  
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types.";
  } 
  
  import ietf-network {
    prefix nw;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-topology {
    prefix nt;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network hardware
    inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2023-03-07 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }
    
  container network-hardware-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "The location information of this network element.";
          leaf-list equipment-room-name {
            type leafref {
              path "/nhi:network-hardware-inventory/" +
                   "nhi:equipment-rooms/nhi:equipment-room/nhi:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "Attributes applicable to network elements.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "Top level container for the list of racks.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "/nhi:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "[nhi:uuid=current()/../ne-ref]/nhi:components"
                  + "/nhi:component/nhi:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
              leaf relative-position {
                type uint8;
                description "A relative position of chassis within
                the rack";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "Attributes applicable to racks only.";
    container rack-location {
      description
        "The location information of the rack, which comprises the 
        name of the equipment room, row number, and column number.";
      leaf equipment-room-name {
        type leafref {
          path "/nhi:network-hardware-inventory/nhi:equipment-rooms"
          + "/nhi:equipment-room/nhi:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "Rack height.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "Rack width.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "Rack depth.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "A relative location information of this component.
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../nhi:uuid";
          }
          description
            "The list of the identifiers of the child components 
            physically contained within this component.";
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "The relative position with respect to the parent
            component among all the sibling components.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        
        container parent-component-references {
          description
              "The top level container for the list of the 
              identifiers of the parents of this component in a 
              hierarchy.";
          list component-reference {
            key index;
            description
              "The list of the identifiers of the parents of this 
              component in a hierarchy.
              
              The index parameter defines the hierarchy: the topmost 
              parent has an index of 0.";
            leaf index {
              type uint8;
              description
                "The index of the parent with respect to the 
                hierarchy.";
            }
            leaf class {
              type leafref {
                path "../../../nhi:class";
              }
              description
                "Class of the hierarchial parent component.";
            }
            leaf uuid {
              type leafref {
                path "../../../nhi:uuid";
              }
              description
                "The identifier of the parent's component in the 
                hierarchy.";
            }
          }
        }

        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "This extension differs between different component 
        classes.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./nhi:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./nhi:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to chassis only.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to slots only.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to boards only.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to ports only.";
  }
 
  augment "/nw:networks/nw:network/nw:node" {
    description 
      "Information that allows the navigation between this node and 
      the Network Element (NE) from which this node is abstracted in 
      the network hardware inventory model.";
    leaf inventory-id {
      type leafref {
        path  "/nhi:network-hardware-inventory/nhi:network-elements"
            + "/nhi:network-element/nhi:uuid";
      }
      config false;
      description
        "The identifier of the Network Element (NE) from which this 
        node is abstracted";
    }
  }
  
  augment "/nw:networks/nw:network/nw:node/nt:termination-point" {
    description 
      "Information that allows the navigation between this Link 
      Termination Point (LTP) and the port component from which this 
      LTP is abstracted in the network hardware inventory model.";
    leaf inventory-id {
      type leafref {
        path  "/nhi:network-hardware-inventory/nhi:network-elements"
            + "/nhi:network-element/nhi:components/nhi:component"
            + "/nhi:uuid";
      }
      config false;
      description
        "The identifier of the port component from which this Link 
        Termination Point (LTP) is abstracted";
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF_SD2-20" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>SD2-20_Equipment Model</title>
    <author >
      <organization>TM Forum</organization>
    </author>
    <date year="2008" month="May"/>
  </front>
  <seriesInfo name="TMF MTOSI 4.0, Network Resource Fulfilment (NRF), SD2-20" value=""/>
</reference>
<reference anchor="IANA_YANG" target="https://www.iana.org/assignments/yang-parameters">
  <front>
    <title>YANG Parameters</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC6933' target='https://www.rfc-editor.org/info/rfc6933'>
<front>
<title>Entity MIB (Version 4)</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<author fullname='J. Quittek' initials='J.' surname='Quittek'><organization/></author>
<author fullname='M. Chandramouli' initials='M.' surname='Chandramouli'><organization/></author>
<date month='May' year='2013'/>
<abstract><t>This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it describes managed objects used for managing multiple logical and physical entities managed by a single Simple Network Management Protocol (SNMP) agent.  This document specifies version 4 of the Entity MIB.  This memo obsoletes version 3 of the Entity MIB module published as RFC 4133.</t></abstract>
</front>
<seriesInfo name='RFC' value='6933'/>
<seriesInfo name='DOI' value='10.17487/RFC6933'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-actn-poi-applicability-08'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='11' month='January' year='2023'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models defined by the IETF to support this
   deployment architecture and specific scenarios relevant to Service
   Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-08'/>
   
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section anchor="appendix"><name>Appendix</name>

<section anchor="comparison-with-openconfig-platform-data-model"><name>Comparison With Openconfig-platform Data Model</name>

<t>Since more and more devices can be managed by domain controller through OpenConfig, to avoid that our inventory data model cannot cover these devices' inventory data, we have compared our inventory data model with the YANG module openconfig-platform which is the data model used to manage inventory information in OpenConfig.</t>

<t>Openconfig-platform data model is NE-level and uses a generic component concept to describe its inner devices and containers, which is similar to ietf-hardware model in <xref target="RFC8348"/>. Since we have also reused the component concept of <xref target="RFC8348"/> in our inventory data model, we can compare the component's attributes between openconfig-platform and our model directly , which is stated below:</t>

<texttable title="Comparison between openconfig-platform and inventory data model" anchor="tab-oc">
      <ttcol align='left'>Attributes in oc-platform</ttcol>
      <ttcol align='left'>Attributes in our model</ttcol>
      <ttcol align='left'>remark</ttcol>
      <c>name</c>
      <c>name</c>
      <c>&#160;</c>
      <c>type</c>
      <c>class</c>
      <c>&#160;</c>
      <c>id</c>
      <c>uuid</c>
      <c>&#160;</c>
      <c>location</c>
      <c>location</c>
      <c>&#160;</c>
      <c>description</c>
      <c>description</c>
      <c>&#160;</c>
      <c>mfg-name</c>
      <c>mfg-name</c>
      <c>&#160;</c>
      <c>mfg-date</c>
      <c>mfg-date</c>
      <c>&#160;</c>
      <c>hardware-version</c>
      <c>hardware-rev</c>
      <c>&#160;</c>
      <c>firmware-version</c>
      <c>firmware-rev</c>
      <c>&#160;</c>
      <c>software-version</c>
      <c>software-rev</c>
      <c>&#160;</c>
      <c>serial-no</c>
      <c>serial-num</c>
      <c>&#160;</c>
      <c>part-no</c>
      <c>part-number</c>
      <c>&#160;</c>
      <c>clei-code</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>removable</c>
      <c>is-fru</c>
      <c>&#160;</c>
      <c>oper-status</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>empty</c>
      <c>contained-child?</c>
      <c>If there is no contained child, it is empty.</c>
      <c>parent</c>
      <c>parent-references</c>
      <c>&#160;</c>
      <c>redundant-role</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>last-switchover-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-switchover-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>switchover-ready</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>temperature</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>memory</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>allocated-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>used-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>pcie</c>
      <c>&#160;</c>
      <c>alarm  data</c>
      <c>properties</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>subcomponents</c>
      <c>contained-child</c>
      <c>&#160;</c>
      <c>chassis</c>
      <c>chassis-specific-info</c>
      <c>&#160;</c>
      <c>port</c>
      <c>port-specific-info</c>
      <c>&#160;</c>
      <c>power-supply</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>fan</c>
      <c>&#160;</c>
      <c>Fan is considered as a specific board. And no need to define as a single component</c>
      <c>fabric</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>storage</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage storage on network element</c>
      <c>cpu</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage CPU on network element</c>
      <c>integrated-circuit</c>
      <c>board-specific-info</c>
      <c>&#160;</c>
      <c>backplane</c>
      <c>&#160;</c>
      <c>Backplane is considered as a part of board. And no need to define as a single component</c>
      <c>software-module</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>controller-card</c>
      <c>&#160;</c>
      <c>Controller card is considered as a specific functional board. And no need to define as a single component</c>
</texttable>

<t>As it mentioned in <xref target="reference-RFC8348"/> that state data and performance data are out of scope of our data model, it is same for alarm data and it should be defined in some other alarm data models separately. And for some component specific structures in openconfig-platform, we consider some of them can be contained by our existing structure, such as fan, backplane, and controller-card. And for some of them, there is no need to manage for operators, such as storage and cpu.</t>

<t>Mostly, our inventory data model can cover the attributes from OpenConfig.</t>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </contact>
    <contact initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.comã</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="B." surname="Wu" fullname="Bo Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>lana.wubo@huawei.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Zhang" fullname="Chenfang Zhang">
      <organization>China Unicom</organization>
      <address>
        <email>zhangcf80@chinaunicom.cn</email>
      </address>
    </contact>
    <contact initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
/weUfUaU8fAAAA==

-->

</rfc>

