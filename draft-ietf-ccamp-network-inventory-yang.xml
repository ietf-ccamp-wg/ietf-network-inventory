<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="P." surname="Bedard" fullname="Phil Bedard">
      <organization>Cisco</organization>
      <address>
        <email>phbedard@cisco.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="08"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management and was specified many years ago. Given the emerging of data models and their deployment in operator's management and control systems, the traditional function of inventory management is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for ensuring the network stays healthy, well-planned, and functioning in the operator's network. Network inventory management allows the operator to keep track of what physical network devices are staying  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when to acquire new assets and what is needed, or to decommission old or faulty ones, which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c>https://www.iana.org/assignments/yang-parameters</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-RFC8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro contained-child*  -> ../uuid
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>For state data like admin-state, oper-state and so on, we consider they are related to device hardware management and not hardware inventory. Therefore, they are outside of scope of this document. Same for the sensor-data, they should be defined in some other performance monitoring data models instead of inventory data model.</t>

<t>We re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
<section anchor="travelling-of-inventory-and-topology"><name>Travelling of Inventory and Topology</name>

<t>Network topology is a logical abstraction based on hardware inventory objects. The abstraction may be based on technology perspective or some requirements perspective. So that the abstracted objects in network topology can better reflect connection-related properties to serve for path computation or service provisioning .etc.</t>

<t>The mapping relationship between hardware inventory object and network topology object can be 1: N (N&gt;=1). We call this mapping relationship as travelling.</t>

<t>Taking the Optical technology as example, an OTN NE can be installed with several kinds of boards, including an Ethernet client signal switching board, a line board which is used for OTN layer switching. This line board may also be used as a start point of WDM layer. In terms of technologies, this OTN NE supports multi-layer network topology connections, so that it should appear in L0, L1 and L2 network topology.</t>

<t>Currently, we have not seen a scenario that multiple hardware inventory objects are abstracted as a single object in network topology.</t>

<t>It is important to describe this travelling relationship in the sake of network Operation and Maintenance (O&amp;M). For example, the actual path of a connection is described by the objects in network topology. When there is an accident happened on this connection, the O&amp;M engineer are more concerned with the physical location information behind the network objects for trouble shooting.</t>

<t>Generally speaking, node object in network topology is corresponded to network element object in hardware inventory. Termination point (TP) object in network topology is corresponded to port component in network element. Some parts of link objects can be corresponded to fiber/cable object in hardware inventory.
//NOTE: take fiber&amp;cable object into scope in the future version.</t>

<t>Compared with network topology, hardware inventory objects are the most basic elements of network. Therefore, from the automation integration perspective, the MDSC or OSS systems would integrate with hardware inventory data before network topology data. It is nor reasonable to exist any network topology related information in the hardware inventory data. On the contrary, the hardware inventory objects related information should be reflected in network topology data.</t>

<t>So we do some extensions in the network topology data model, to provide hardware inventory objects' identifier references for node, TP and link. Where there are needs for hardware inventory objects' information, it is easy to retrieve by these identifiers.</t>

<figure><artwork type="ascii-art"><![CDATA[
augment /nw:networks/nw:network/nw:node:
   +--rw inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--rw inventory-id?   leafref
]]></artwork></figure>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-hardware-inventory.tree"><![CDATA[
module: ietf-network-hardware-inventory
  +--ro network-hardware-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref               leafref
     |              +--ro component-ref        leafref
     |              +--ro relative-position?   uint8
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-component-references
                 |  +--ro component-reference* [index]
                 |     +--ro index    uint8
                 |     +--ro class?   -> ../../../class
                 |     +--ro uuid?    -> ../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
augment /nw:networks/nw:network/nw:node:
   +--rw inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--rw inventory-id?   leafref
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-hardware-inventory@2023-01-16.yang"><![CDATA[
module ietf-network-hardware-inventory {
  yang-version 1.1;
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-network-hardware-inventory";
  prefix nhi;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "https://www.iana.org/assignments/yang-parameters";
  }
  
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types.";
  } 
  
  import ietf-network {
    prefix nw;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-topology {
    prefix nt;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network hardware
    inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2023-01-16 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }
    
  container network-hardware-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "The location information of this network element.";
          leaf-list equipment-room-name {
            type leafref {
              path "/nhi:network-hardware-inventory/" +
                   "nhi:equipment-rooms/nhi:equipment-room/nhi:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "Attributes applicable to network elements.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "Top level container for the list of racks.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "/nhi:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "[nhi:uuid=current()/../ne-ref]/nhi:components"
                  + "/nhi:component/nhi:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
              leaf relative-position {
                type uint8;
                description "A relative position of chassis within
                the rack";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "Attributes applicable to racks only.";
    container rack-location {
      description
        "The location information of the rack, which comprises the 
        name of the equipment room, row number, and column number.";
      leaf equipment-room-name {
        type leafref {
          path "/nhi:network-hardware-inventory/nhi:equipment-rooms"
          + "/nhi:equipment-room/nhi:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "Rack height.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "Rack width.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "Rack depth.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "A relative location information of this component.
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../nhi:uuid";
          }
          description
            "The list of the identifiers of the child components 
            physically contained within this component.";
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "The relative position with respect to the parent
            component among all the sibling components.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        
        container parent-component-references {
          description
              "The top level container for the list of the 
              identifiers of the parents of this component in a 
              hierarchy.";
          list component-reference {
            key index;
            description
              "The list of the identifiers of the parents of this 
              component in a hierarchy.
              
              The index parameter defines the hierarchy: the topmost 
              parent has an index of 0.";
            leaf index {
              type uint8;
              description
                "The index of the parent with respect to the 
                hierarchy.";
            }
            leaf class {
              type leafref {
                path "../../../nhi:class";
              }
              description
                "Class of the hierarchial parent component.";
            }
            leaf uuid {
              type leafref {
                path "../../../nhi:uuid";
              }
              description
                "The identifier of the parent's component in the 
                hierarchy.";
            }
          }
        }

        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "This extension differs between different component 
        classes.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./nhi:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./nhi:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to chassis only.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to slots only.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to boards only.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to ports only.";
  }
 
  augment "/nw:networks/nw:network/nw:node" {
    description 
          "identifier of network element from which the node is 
          abstracted";
          
          leaf inventory-id {
            type leafref {
              path "/nhi:network-hardware-inventory/nhi:network-elements"
              + "/nhi:network-element/nhi:uuid";
            }
          }
  }
  
  augment "/nw:networks/nw:network/nw:node" {
    description 
      "identifier of network element from which the node is 
      abstracted";
      
    leaf inventory-id {
      type leafref {
        path "/nhi:network-hardware-inventory/nhi:network-elements"
        + "/nhi:network-element/nhi:uuid";
      }
    }
  }
  
  augment "/nw:networks/nw:network/nw:node/nt:termination-point" {
    description 
      "identifier of port component from which the node is 
      abstracted";
      
    leaf inventory-id {
      type leafref {
        path "/nhi:network-hardware-inventory/nhi:network-elements"
        + "/nhi:network-element/nhi:components/nhi:component"
        + "/nhi:uuid";
      }
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC6933' target='https://www.rfc-editor.org/info/rfc6933'>
<front>
<title>Entity MIB (Version 4)</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<author fullname='J. Quittek' initials='J.' surname='Quittek'><organization/></author>
<author fullname='M. Chandramouli' initials='M.' surname='Chandramouli'><organization/></author>
<date month='May' year='2013'/>
<abstract><t>This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it describes managed objects used for managing multiple logical and physical entities managed by a single Simple Network Management Protocol (SNMP) agent.  This document specifies version 4 of the Entity MIB.  This memo obsoletes version 3 of the Entity MIB module published as RFC 4133.</t></abstract>
</front>
<seriesInfo name='RFC' value='6933'/>
<seriesInfo name='DOI' value='10.17487/RFC6933'/>
</reference>



<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-actn-poi-applicability-08'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='11' month='January' year='2023'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models defined by the IETF to support this
   deployment architecture and specific scenarios relevant to Service
   Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-08'/>
   
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section anchor="appendix"><name>Appendix</name>

<section anchor="comparison-with-openconfig-platform-data-model"><name>Comparison With Openconfig-platform Data Model</name>

<t>Since more and more devices can be managed by domain controller through OpenConfig, to avoid that our inventory data model cannot cover these devices' inventory data, we have compared our inventory data model with the openconfig-platform.yang which is the data model used to manage inventory information in OpenConfig.</t>

<t>Openconfig-platform data model is NE-level and uses a generic component concept to describe its inner devices and containers, which is similar to ietf-hardware model in <xref target="RFC8348"/>. Since we have also reused the component concept of <xref target="RFC8348"/> in our inventory data model, we can compare the component's attributes between openconfig-platform and our model directly , which is stated below:</t>

<texttable title="Comparison between openconfig-platform and inventory data model" anchor="tab-oc">
      <ttcol align='left'>Attributes in oc-platform</ttcol>
      <ttcol align='left'>Attributes in our model</ttcol>
      <ttcol align='left'>remark</ttcol>
      <c>name</c>
      <c>name</c>
      <c>&#160;</c>
      <c>type</c>
      <c>class</c>
      <c>&#160;</c>
      <c>id</c>
      <c>uuid</c>
      <c>&#160;</c>
      <c>location</c>
      <c>location</c>
      <c>&#160;</c>
      <c>description</c>
      <c>description</c>
      <c>&#160;</c>
      <c>mfg-name</c>
      <c>mfg-name</c>
      <c>&#160;</c>
      <c>mfg-date</c>
      <c>mfg-date</c>
      <c>&#160;</c>
      <c>hardware-version</c>
      <c>hardware-rev</c>
      <c>&#160;</c>
      <c>firmware-version</c>
      <c>firmware-rev</c>
      <c>&#160;</c>
      <c>software-version</c>
      <c>software-rev</c>
      <c>&#160;</c>
      <c>serial-no</c>
      <c>serial-num</c>
      <c>&#160;</c>
      <c>part-no</c>
      <c>part-number</c>
      <c>&#160;</c>
      <c>clei-code</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>removable</c>
      <c>is-fru</c>
      <c>&#160;</c>
      <c>oper-status</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>empty</c>
      <c>contained-child?</c>
      <c>If there is no contained child, it is empty.</c>
      <c>parent</c>
      <c>parent-references</c>
      <c>&#160;</c>
      <c>redundant-role</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>last-switchover-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-switchover-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>switchover-ready</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>temperature</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>memory</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>allocated-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>used-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>pcie</c>
      <c>&#160;</c>
      <c>alarm  data</c>
      <c>properties</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>subcomponents</c>
      <c>contained-child</c>
      <c>&#160;</c>
      <c>chassis</c>
      <c>chassis-specific-info</c>
      <c>&#160;</c>
      <c>port</c>
      <c>port-specific-info</c>
      <c>&#160;</c>
      <c>power-supply</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>fan</c>
      <c>&#160;</c>
      <c>Fan is considered as a specific board. And no need to define as a single component</c>
      <c>fabric</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>storage</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage storage on network element</c>
      <c>cpu</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage CPU on network element</c>
      <c>integrated-circuit</c>
      <c>board-specific-info</c>
      <c>&#160;</c>
      <c>backplane</c>
      <c>&#160;</c>
      <c>Backplane is considered as a part of board. And no need to define as a single component</c>
      <c>software-module</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>controller-card</c>
      <c>&#160;</c>
      <c>Controller card is considered as a specific functional board. And no need to define as a single component</c>
</texttable>

<t>As it mentioned in <xref target="reference-RFC8348"/> that state data and performance data are out of scope of our data model, it is same for alarm data and it should be defined in some other alarm data models separately. And for some component specific structures in openconfig-platform, we consider some of them can be contained by our existing structure, such as fan, backplane, and controller-card. And for some of them, there is no need to manage for operators, such as storage and cpu.</t>

<t>Mostly, our inventory data model can cover the attributes from OpenConfig.</t>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </contact>
    <contact initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.comã</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="B." surname="Wu" fullname="Bo Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>lana.wubo@huawei.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Zhang" fullname="Chenfang Zhang">
      <organization>China Unicom</organization>
      <address>
        <email>zhangcf80@chinaunicom.cn</email>
      </address>
    </contact>
    <contact initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
+e8AeiUrnri4H+6sMc2H2JjD56V3gux968KGTe9qIN8ANlZugXVeAfEOaUEX
XKj7uu8N732DP9JtKSu8hoKneqcp830Et09XYVT7b5bZfl7t0zJd080OQZR3
peSL9BvOt+JQstYNIO+4Q/k6PviGfylNyQbmtR152ce+qh5prrc4R1BD7vg9
/mN36FwE4nbH94V0drjtZSEdCHj3l3gowIMPHbEI9ahcmm53efdopZ9zXxz0
Xhwig4fTpG+4iju0M9jDonfIH4QFTFGsAgMkLx8/PX8mDg8PTl6Kn6At+s6/
x4NtbkmieCITDXZ++l78lIz34c9v1eyjO48u7E5KulSauOByPppM4uVq9J3E
HBo+T6saWn6LJRjrYp+eP1YtvtNZh3wLDHZxuIgxmO/npiVfv71qJvTw8aKJ
L5N0CHtWCMJxHWeFeNJU7e3uW7wOqhiO4dkaIAcpPBffN+1t4NsYH82bggb+
eI4j64JyhnfNAy4J7Fh1AJ2Kng/H/PxxXrxO4y5YfwN1InqGCUlFWuFNs2Dk
Yva0D/MfyWw2HMvHjy+KaTyDjb0L6rN4DAi+TMrm7ds0D6A4wxeGK/XC4xoz
Wws8CwPTZ5jW3+1IWWYZUpJvzuUpP4phc1mvqfQlw7Hs0CAlkxiCfw8fX0wo
AVCM/wbXR3LDjksk75yeHB3sydQW/vewWF2V6AEDpWhP3L97/76gxXJeNjK+
hOJaQbTR2R3haQ6v8TilqRd4sbV0f0+oVgPV8iWwGK1HEfVTPapXyTSt+OBV
BQM3dBGN4DAGPg2FLbykG/yWeOqKR8GFnH78gvnSXGl2omLfKFsAZooi+puy
ajhmmQNyqoYOtxmApF6WThIMyeEwcG0cAiIc4fQKUzDg+5OzI1jY9C63x4od
M7yhGHE+k/HID4YTRQNDwN1KPE/mcSZeqnSBStEAHV5cAYBeP5LHWvL5HSV6
agSTJEbsSKxJx9qzOAXGr7Z053RGKQYVp/rDM3U51zcYVC4pIu+bSusqyWbE
rhRjkhHyeVGnqlyPYktz+94u3rq3O+D/4h16+Le6fQ//pkv39B8MQr7GF++Z
v0xzfd8efvWu4NsdMJDdk4Ofd3l+d9U9fLti43v4GIh/GZ+490DcQVrgVXx7
/CdexLcXvIdPk+9KbHYZn5Ifo5Hg+8CG+4H7v2Tgu30FGNX203d8SRDypi8X
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
PLPWUebaEPwJsCHjVLWFOgV6tSDoW/hCLrjAwEIeORKMN3TJdSwmfxQ+DG9U
ZhT+i/73cyoigllmOgbeqbSlIe2ryiBUIc4HI28MXMgLFgkg4Hq3Zc/TouXn
LYO9x1xf78zTfRpyBVdhu3nXlLeM+K7tS+Pe42rSYpf/n3w2CGkDf0f/2A8J
H6VSqjJSgUscNxqdG1n1AYMLu6C2HNu5sxjcyd31lvIHza3rkfG2mPA5tKbL
VqrnTc6kO9WP3hPJFlQPjEVXDqyEjdg7j7Toy2HFd1I/N1cWr9r7Q3cnpTC9
Si76VAM7zfRTzJuCv/W8/ZG0eiaRXEOrcHzDx6PVuliHfwpanUkk19FKH8R/
Ekr1nMjfTBI4ED0QKvrhn0gCeFLcnh8ayGnTdSrbER1z87lZGzKj3YpdroK+
eXEgUlfBHO5t5sbMRuuCPFMTj0/Y08qu+ka3Q5CeHjR5d811lZjOYUtW/G5L
D87n8NubNbNLYb1c/4vSMJZJjMeDsyZjG6itXXpOJWZqpBeTEzDeVbO+2x74
cWD+LGpbkT8aus/irVmm2y3y1zlmhUi9ksOayf2T6wwP60PBzLKGJlO7Tj1H
OH4+YN1YK+VkNj/tPnHoDrDCz8cRY33BVj6DtyYgvLK8xeRB6Q/H6ozBakmz
3jXWzV1muN1spQfVxd+bsJVmpBZ/fSq+6pTH5MJax2eqbMWHM5k19pguBo04
j5tywSiVAB335G41HOdRSTkR3Pu5nVcOVIaCW86WEhaW8YongYbGU+Q1t+hz
gFgdHxFJORYJePiM7mTNPej+ZKoKvphXyRdXJViUN62WfBcwpnVwMpgsAM7F
o/3dPX3LyZjQlq6PKTFZICsu8axD1/tUw2mL7fZY5CLkwtrKf8rXzFoo+qYG
VZitZJFzv7ytzPL7JHJQYt3Hn1wYJcCdsiTK9uyp4xtVgVO6LqJuuZ/8HcKu
yYt7bJJNI5kFR+f2eNq1q86oWN4OUQB5YIyQkL6zyuTYiN26bHALN+JEI9Rl
H+JqCyMDveONP5Qt2VVfi0PgS8pAhi04wYuR2g7flh8u3OHAHgkl4e1aJWI9
EGUCe30ub6DSRPkkbHZcPXv14zql1A2i1mzWE0i9juPWRFZzns/0ExhTnqpx
BFisPbAA1ILeea70s/Uq07yt+DRwjse3cv8R1qVNkB9Bte6ghpt8sS4ysj8k
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
y5ze/n9bB8oEb/AAAA==

-->

</rfc>

