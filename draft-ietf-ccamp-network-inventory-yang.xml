<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="P." surname="Bedard" fullname="Phil Bedard">
      <organization>Cisco</organization>
      <address>
        <email>phbedard@cisco.com</email>
      </address>
    </author>

    <date year="2023" month="March" day="08"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management and was specified many years ago. Given the emerging of data models and their deployment in operator's management and control systems, the traditional function of inventory management is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for ensuring the network stays healthy, well-planned, and functioning in the operator's network. Network inventory management allows the operator to keep track of what physical network devices are staying  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when to acquire new assets and what is needed, or to decommission old or faulty ones, which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF_SD2-20"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>inet</c>
      <c>ietf-inet-types</c>
      <c><xref target="RFC6991"/></c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="IANA_YANG"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF_SD2-20"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-RFC8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro contained-child*  -> ../uuid
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>Some of the definitions taken from <xref target="RFC8348"/> are actually based on the ENTITY-MIB <xref target="RFC6933"/>.</t>

<t>For state data like admin-state, oper-state and so on, we consider they are related to device hardware management and not hardware inventory. Therefore, they are outside of scope of this document. Same for the sensor-data, they should be defined in some other performance monitoring data models instead of inventory data model.</t>

<t>We re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
<section anchor="travelling-of-inventory-and-topology"><name>Travelling of Inventory and Topology</name>

<t>Network topology is a logical abstraction based on hardware inventory objects. The abstraction may be based on technology perspective or some requirements perspective. So that the abstracted objects in network topology can better reflect connection-related properties to serve for path computation or service provisioning .etc.</t>

<t>The mapping relationship between hardware inventory object and network topology object can be 1: N (N&gt;=1). We call this mapping relationship as travelling.</t>

<t>Taking the Optical technology as example, an OTN NE can be installed with several kinds of boards, including an Ethernet client signal switching board, a line board which is used for OTN layer switching. This line board may also be used as a start point of WDM layer. In terms of technologies, this OTN NE supports multi-layer network topology connections, so that it should appear in L0, L1 and L2 network topology.</t>

<t>Currently, we have not seen a scenario that multiple hardware inventory objects are abstracted as a single object in network topology.</t>

<t>It is important to describe this travelling relationship in the sake of network Operation and Maintenance (O&amp;M). For example, the actual path of a connection is described by the objects in network topology. When there is an accident happened on this connection, the O&amp;M engineer are more concerned with the physical location information behind the network objects for trouble shooting.</t>

<t>Generally speaking, node object in network topology is corresponded to network element object in hardware inventory. Termination point (TP) object in network topology is corresponded to port component in network element. Some parts of link objects can be corresponded to fiber/cable object in hardware inventory.
//NOTE: take fiber&amp;cable object into scope in the future version.</t>

<t>Compared with network topology, hardware inventory objects are the most basic elements of network. Therefore, from the automation integration perspective, the MDSC or OSS systems would integrate with hardware inventory data before network topology data. It is nor reasonable to exist any network topology related information in the hardware inventory data. On the contrary, the hardware inventory objects related information should be reflected in network topology data.</t>

<t>So we do some extensions in the network topology data model, to provide hardware inventory objects' identifier references for node, TP and link. Where there are needs for hardware inventory objects' information, it is easy to retrieve by these identifiers.</t>

<figure><artwork type="ascii-art"><![CDATA[
augment /nw:networks/nw:network/nw:node:
   +--rw inventory-id?   leafref
augment /nw:networks/nw:network/nw:node/nt:termination-point:
   +--rw inventory-id?   leafref
]]></artwork></figure>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-hardware-inventory.tree"><![CDATA[
module: ietf-network-hardware-inventory
  +--ro network-hardware-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref               leafref
     |              +--ro component-ref        leafref
     |              +--ro relative-position?   uint8
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-component-references
                 |  +--ro component-reference* [index]
                 |     +--ro index    uint8
                 |     +--ro class?   -> ../../../class
                 |     +--ro uuid?    -> ../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info

  augment /nw:networks/nw:network/nw:node:
    +--ro inventory-id?   leafref
  augment /nw:networks/nw:network/nw:node/nt:termination-point:
    +--ro inventory-id?   leafref
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-hardware-inventory@2023-03-07.yang"><![CDATA[
module ietf-network-hardware-inventory {
  yang-version 1.1;
  namespace 
    "urn:ietf:params:xml:ns:yang:ietf-network-hardware-inventory";
  prefix nhi;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "https://www.iana.org/assignments/yang-parameters";
  }
  
  import ietf-inet-types {
    prefix inet;
    reference
      "RFC6991: Common YANG Data Types.";
  } 
  
  import ietf-network {
    prefix nw;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  import ietf-network-topology {
    prefix nt;
    reference
      "RFC8345: A YANG Data Model for Network Topologies";
  }
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network hardware
    inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2023-03-07 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for Network Hardware Inventory.";
      //RFC Editor: replace XXXX with actual RFC number, update date
      //information and remove this note
  }
    
  container network-hardware-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "The location information of this network element.";
          leaf-list equipment-room-name {
            type leafref {
              path "/nhi:network-hardware-inventory/" +
                   "nhi:equipment-rooms/nhi:equipment-room/nhi:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "Attributes applicable to network elements.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "Top level container for the list of racks.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "/nhi:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/nhi:network-hardware-inventory"
                  + "/nhi:network-elements/nhi:network-element"
                  + "[nhi:uuid=current()/../ne-ref]/nhi:components"
                  + "/nhi:component/nhi:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
              leaf relative-position {
                type uint8;
                description "A relative position of chassis within
                the rack";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "Attributes applicable to racks only.";
    container rack-location {
      description
        "The location information of the rack, which comprises the 
        name of the equipment room, row number, and column number.";
      leaf equipment-room-name {
        type leafref {
          path "/nhi:network-hardware-inventory/nhi:equipment-rooms"
          + "/nhi:equipment-room/nhi:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "Rack height.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "Rack width.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "Rack depth.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "A relative location information of this component.
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../nhi:uuid";
          }
          description
            "The list of the identifiers of the child components 
            physically contained within this component.";
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "The relative position with respect to the parent
            component among all the sibling components.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        
        container parent-component-references {
          description
              "The top level container for the list of the 
              identifiers of the parents of this component in a 
              hierarchy.";
          list component-reference {
            key index;
            description
              "The list of the identifiers of the parents of this 
              component in a hierarchy.
              
              The index parameter defines the hierarchy: the topmost 
              parent has an index of 0.";
            leaf index {
              type uint8;
              description
                "The index of the parent with respect to the 
                hierarchy.";
            }
            leaf class {
              type leafref {
                path "../../../nhi:class";
              }
              description
                "Class of the hierarchial parent component.";
            }
            leaf uuid {
              type leafref {
                path "../../../nhi:uuid";
              }
              description
                "The identifier of the parent's component in the 
                hierarchy.";
            }
          }
        }

        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "This extension differs between different component 
        classes.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./nhi:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./nhi:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to chassis only.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to slots only.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to boards only.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "Specific attributes applicable to ports only.";
  }
 
  augment "/nw:networks/nw:network/nw:node" {
    description 
      "Information that allows the navigation between this node and 
      the Network Element (NE) from which this node is abstracted in 
      the network hardware inventory model.";
    leaf inventory-id {
      type leafref {
        path  "/nhi:network-hardware-inventory/nhi:network-elements"
            + "/nhi:network-element/nhi:uuid";
      }
      config false;
      description
        "The identifier of the Network Element (NE) from which this 
        node is abstracted";
    }
  }
  
  augment "/nw:networks/nw:network/nw:node/nt:termination-point" {
    description 
      "Information that allows the navigation between this Link 
      Termination Point (LTP) and the port component from which this 
      LTP is abstracted in the network hardware inventory model.";
    leaf inventory-id {
      type leafref {
        path  "/nhi:network-hardware-inventory/nhi:network-elements"
            + "/nhi:network-element/nhi:components/nhi:component"
            + "/nhi:uuid";
      }
      config false;
      description
        "The identifier of the port component from which this Link 
        Termination Point (LTP) is abstracted";
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF_SD2-20" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>SD2-20_Equipment Model</title>
    <author >
      <organization>TM Forum</organization>
    </author>
    <date year="2008" month="May"/>
  </front>
  <seriesInfo name="TMF MTOSI 4.0, Network Resource Fulfilment (NRF), SD2-20" value=""/>
</reference>
<reference anchor="IANA_YANG" target="https://www.iana.org/assignments/yang-parameters">
  <front>
    <title>YANG Parameters</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>



<reference anchor='RFC6933' target='https://www.rfc-editor.org/info/rfc6933'>
<front>
<title>Entity MIB (Version 4)</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<author fullname='J. Quittek' initials='J.' surname='Quittek'><organization/></author>
<author fullname='M. Chandramouli' initials='M.' surname='Chandramouli'><organization/></author>
<date month='May' year='2013'/>
<abstract><t>This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community. In particular, it describes managed objects used for managing multiple logical and physical entities managed by a single Simple Network Management Protocol (SNMP) agent.  This document specifies version 4 of the Entity MIB.  This memo obsoletes version 3 of the Entity MIB module published as RFC 4133.</t></abstract>
</front>
<seriesInfo name='RFC' value='6933'/>
<seriesInfo name='DOI' value='10.17487/RFC6933'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability' target='https://datatracker.ietf.org/doc/html/draft-ietf-teas-actn-poi-applicability-08'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='11' month='January' year='2023'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models defined by the IETF to support this
   deployment architecture and specific scenarios relevant to Service
   Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-08'/>
   
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section anchor="appendix"><name>Appendix</name>

<section anchor="comparison-with-openconfig-platform-data-model"><name>Comparison With Openconfig-platform Data Model</name>

<t>Since more and more devices can be managed by domain controller through OpenConfig, to avoid that our inventory data model cannot cover these devices' inventory data, we have compared our inventory data model with the YANG module openconfig-platform which is the data model used to manage inventory information in OpenConfig.</t>

<t>Openconfig-platform data model is NE-level and uses a generic component concept to describe its inner devices and containers, which is similar to ietf-hardware model in <xref target="RFC8348"/>. Since we have also reused the component concept of <xref target="RFC8348"/> in our inventory data model, we can compare the component's attributes between openconfig-platform and our model directly , which is stated below:</t>

<texttable title="Comparison between openconfig-platform and inventory data model" anchor="tab-oc">
      <ttcol align='left'>Attributes in oc-platform</ttcol>
      <ttcol align='left'>Attributes in our model</ttcol>
      <ttcol align='left'>remark</ttcol>
      <c>name</c>
      <c>name</c>
      <c>&#160;</c>
      <c>type</c>
      <c>class</c>
      <c>&#160;</c>
      <c>id</c>
      <c>uuid</c>
      <c>&#160;</c>
      <c>location</c>
      <c>location</c>
      <c>&#160;</c>
      <c>description</c>
      <c>description</c>
      <c>&#160;</c>
      <c>mfg-name</c>
      <c>mfg-name</c>
      <c>&#160;</c>
      <c>mfg-date</c>
      <c>mfg-date</c>
      <c>&#160;</c>
      <c>hardware-version</c>
      <c>hardware-rev</c>
      <c>&#160;</c>
      <c>firmware-version</c>
      <c>firmware-rev</c>
      <c>&#160;</c>
      <c>software-version</c>
      <c>software-rev</c>
      <c>&#160;</c>
      <c>serial-no</c>
      <c>serial-num</c>
      <c>&#160;</c>
      <c>part-no</c>
      <c>part-number</c>
      <c>&#160;</c>
      <c>clei-code</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>removable</c>
      <c>is-fru</c>
      <c>&#160;</c>
      <c>oper-status</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>empty</c>
      <c>contained-child?</c>
      <c>If there is no contained child, it is empty.</c>
      <c>parent</c>
      <c>parent-references</c>
      <c>&#160;</c>
      <c>redundant-role</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>last-switchover-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-switchover-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>switchover-ready</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>temperature</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>memory</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>allocated-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>used-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>pcie</c>
      <c>&#160;</c>
      <c>alarm  data</c>
      <c>properties</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>subcomponents</c>
      <c>contained-child</c>
      <c>&#160;</c>
      <c>chassis</c>
      <c>chassis-specific-info</c>
      <c>&#160;</c>
      <c>port</c>
      <c>port-specific-info</c>
      <c>&#160;</c>
      <c>power-supply</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>fan</c>
      <c>&#160;</c>
      <c>Fan is considered as a specific board. And no need to define as a single component</c>
      <c>fabric</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>storage</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage storage on network element</c>
      <c>cpu</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage CPU on network element</c>
      <c>integrated-circuit</c>
      <c>board-specific-info</c>
      <c>&#160;</c>
      <c>backplane</c>
      <c>&#160;</c>
      <c>Backplane is considered as a part of board. And no need to define as a single component</c>
      <c>software-module</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>controller-card</c>
      <c>&#160;</c>
      <c>Controller card is considered as a specific functional board. And no need to define as a single component</c>
</texttable>

<t>As it mentioned in <xref target="reference-RFC8348"/> that state data and performance data are out of scope of our data model, it is same for alarm data and it should be defined in some other alarm data models separately. And for some component specific structures in openconfig-platform, we consider some of them can be contained by our existing structure, such as fan, backplane, and controller-card. And for some of them, there is no need to manage for operators, such as storage and cpu.</t>

<t>Mostly, our inventory data model can cover the attributes from OpenConfig.</t>

</section>
</section>
<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>

    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
        <name>Contributors</name>
    <contact initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </contact>
    <contact initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.comã</email>
      </address>
    </contact>
    <contact initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </contact>
    <contact initials="B." surname="Wu" fullname="Bo Wu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>lana.wubo@huawei.com</email>
      </address>
    </contact>
    <contact initials="C." surname="Zhang" fullname="Chenfang Zhang">
      <organization>China Unicom</organization>
      <address>
        <email>zhangcf80@chinaunicom.cn</email>
      </address>
    </contact>
    <contact initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </contact>
    </section>

  </back>

<!-- ##markdown-source:
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
iUwPWGbIQZR2B0cg8Uw+w99qL6SVpo0ZXRnHrYrba46ltuwynU1c6YQcmhhm
bKVTFbaB90IHQQEfcDf14vTUp/22h2/Cf/cDuw69e23995te9Nihdwdu/vbB
UuyghekbEW1qfeX//R+yKTPZPye6J8is8PMv20Pdoek/0yr8kzY9tPeM3uL9
Hf6GNp/Xl3/1o0XfuC2triTm/NZeaO+bGFhfFkWFkYygJklKUcmBaTt/9yNI
yfg0Ml7FjCpxLYU0pk+Q4MYUdujBwaKXOprSHAiy/EUs2yBwtRm/0RS73tBI
jy7h7hnTaMre/UuvLc3Pt9UjbYkCW7Zdpb8kV1WB5Q4exNvupFycGZBH0sL7
JV91KyE/VNUjzDGKNNW6g5ftKx177qHaWK5Za00dA/CB8Z2htWVdUpCjlqJT
TH0E28Gn42x7duMGphHGt/IhLj534ynDVv5FQfyWsndXEG/auy6IN+3dBAw3
dXz3Q657062nEw/gra8vZON40zVX3TO4h5rutBVYo4Z/dfzZFtyauvVugpx5
rArleKFRrLhjzjMG8FjmH1fG0GUKptWizH9VuVkPLF/JGWr92gVhuUpyWZWQ
MUbtuaYIW26Wzltp3gVGx3HnHV6LSFM1m+ntflmDel8UMiPXxO+hKL+U5Zfs
onu6JBNFQhWcqKarbqJtqh36gXtLGYLEnjS7E8YkTTLr2sbUY1qDAYl+fPQz
42UNktjxVFkN0AFk9H41AIKUsU9W9UQ9E06Ya5mgczRSUNyVbAppSwWL2WR1
i4UT2ooD72QVrXZJ0q1TQds1fYvXP+QCb2TFwHHWTnWJkBVwmKzS188+iBLO
SUfQ+MvvZN7fXWB4cfv8qy/vHowFSm5mfazkFBoT67hpFmD00lfKMlJFdezq
WBiPmWLwJDo7xPPLc3H+xKocIAtBcEilzGIAeDMKLSPPT2NXMoB+T3AjYc4x
VxIR6KnE1AcAgYWUF9xrRPcIpayoYMI5dc0LxITqD5meKvrOdEM2U3vVhPRT
WR9Z0wew/O7kjCFRpgeX18DDzqonLWsFydnLA1UmeySMRZ/NNE+RN5XZNG/V
7ZzJ3X92ZySe3aW1fnavB4ezXroa7yQKKlPJFjo5YKimkk544SF0Bkp8P7LM
M7uFqcLpIJK7AhvHqqVn/MJtpc10ppHhLpfxpOeiwQqCVtLPcxWCSfM/s4Iz
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
Y7NilsgsOLq3x9uufXVHxfJ2jALIA2OEhPSdNSbHRuy3dYdHuBEnGqGYfYi7
LYwMjI5v9FC2pP9As8Em5QROzO1NsUXI4dvzw4UHHNkzoSS8fauoqweizuCs
L+WbUZoovwmbnTZPX367SSl1g6g1mw0EUm/iuA2R1ZznM/sNjClP1TgBLDZe
WABqQe881/jZeZdp3lZ8GrjH43e0fw/r0ibIt6BaR6jhJl9siowcDgnaBCZw
H20yy05Lqu8rcuIU+cJM7ElD+1qXBJkCo1I1QSTJdw0DL3lO/e3ZR1zbTN8g
KteZfkwntSpZ6xccOH9S3pMErpeuM+vZRVPCOitr1Ppa+WqKmg/jMLWwk/cN
+uUfWZRa38wvKwxR92pPbb6bx5d49GT41Dbml3l4w2BmetMImX0DRIsXCJKl
xyH2ZI038aXYl5emsum+zZdWiEGo7FX0wkaE9qQdryA3JhcFN4yAWexUL8Ht
r2bhBKPZ2yWEXCiM2A+lU1TSmG1DJ9U4Qql+Ja/fi0w4Mj042U0S/j1Crz6K
OxBL1poIUEpfWFjU4tYRUgVqlP1etOIXIGMECiC2A4Uo1mNL+mDbCHX6Fdd+
L+LQBGK06aO1DWkODy+fi0dPxPHJyZOTI46JmWb5lfI2xk6wwZ3N9ADQVPiD
pbcqC2C9FOARS59wF4FHPdwY2IDg6eM4sJt+cwRx7A3oDfHyb44fv/E6jOAA
Q/3m+PFLrR56+F9Vi3BvQzHCvQ06lNE02cpBy5qNrTK9yhfqlU/LzibVFQ1y
BYXS7Nx32MXt8ycH/PYjO6ocr4/1dqsVb2/H2AcevuDXPNR+l1fwpo6iF2QZ
uOilC97tAqT9fAgvbSGSNhG4MzZyt190ZSgEsn9hvBWBDZQ+qf1YULETGwVr
Wn543nqGb20pCPaTrS/4ydZn+GarrgfmvsYaIwb06TPdfwxmM5aD+2cExG/F
mxsWwlnU+LIOcuvbQHFU9DrEi6NadceAHFzUDevCJau0fgV2y5d76EbaE9Y3
WxVOfWjKTo0Rgz1ZM5UDH9VrMv0HooT48YvjGVWlkV4N6xlOq+1XDO4im3b1
ZkiNahYEcnp8frwBADUJdE6ShJ7vYkDH+Jr0LP9FvoT1WN++8Ytmz+Fb5qJk
XaQt7nsrQJSeps0xzoweGKMXc+h5UEqU1u8iK1cPWOKzil79st5fbJdw4i54
pMc0Er1Ym15Vuaz+A8vov0vKFxoAHg1+/fZQo0fe9zqY58l1Am8Uqr4Psevb
VQE66NfVWvZ1KQD0vF5byWlbg3jPDJsZk5s/RGoLKqX5y5pdsqZhYz04Z739
hm+urt0X0HN6Z7yk6DleGjvHrbafimvyVV7wo060X7QM1W9h6TemPnv7dix4
/RV56R3JOmMSOFdUCi2QLDYAeocwshS0ashDctFciPuNa0/wYRNaKKqpB2PI
N47Uk4T2pFu6CqNSdke4GG+ElZ2GKE4NONH7UsOGr+oMxZDo/7xBqEn0R8S/
HPwKodLNXvhn4Ms3wU8NrnQCxqCyNfkOUAeeoHgTf6FiE1Sd0hDqGv1yE1Rb
++l1jX65CaqOAQnhGv1yG6jkcI9BDX65Cao+JVXxT7urE3q4C1QdoRGC6gTG
7QJVx3mEoDohZDtBlbEhVeB7O9jK/2oYKsc3BGBiVzv4YSeo0yLLE1R4QlDj
XcXlo5MBqFShkszWQFd5QbnbgAgVC+MlKHe7nhgZxJVENR8SAajZag0qU6Sr
l5XywPrqVF01kDFrXQFSS/1YPUIfmyXEcy08lE780NffW5IFVJOunKWUnetR
/D2WEIR1mzSg2UyXqCwBXmkjN8h7ENuHSjUZt8B1C6h1Nqmq1sbzA0K18HxP
qC5JZzdO13eG2gKfocqO10m9rgNQoRMpmKiQObD5gIBtXIf3xntARdOfUqaT
dXXtyqv34FfUH/sA3xfqeprHFZoBqCnowyDg+8vFUGsUZfTM+AfEtekm1u2h
19VPr9tqQDogpFc5iFD4om0LqOQliHwfukvYDlda/gTTnwufa9+DrvM0pCNu
hvo0LftvSafmdW5yN4/FMZgaZUURUmyA8YvG1DQvF4VtESmEJmi/7YzQBvYB
UwqNz52naT3Ri2bT6Qvr4dqRPTVp3aqBQEr7ZVSY49Yh5eA3QOTxi29DSEij
o2yzRU1iaprX0y5vraFCd4EbEUSo6EUBq7DcVd16pPsFOEqV0X9nhtKarnRd
bIvVMEMZj00yxfvLbaE+Np4e6je0h+ZdOeVSye86e/QhtukkqabKfWg5tDa5
CEIuCPYBHjeoAJqn5ckJonW7xDgzyF9lHe4Itnd+Umx5R4usgw3RhWA7Pljf
bHRBbjqBNMi8DbwWTg9c6PfPrR7yKXb1qHpxw3RFuNTBDzfBNA8VzsL+jT7B
2DXjvrtOKvRKOf2cAko4Pf1GvAY+krGZDUrlkdlOI+2dsjjOQ1qONnLUdk8k
8PPaqElV6OJSgymRRYOsO3K+nVVNW4BcGfI1Gkej7Xgin7jnygM2ZPMtm325
R9535Us+nmL8dJHNFvI1Dn5z3XnlxHk3nla5yF/J6lZp+YoRMB1ev35wmpzQ
Cx5JC/pykk5busZJnGfQgTuRHsv0yolBZjfdIl3Lxwist9ZxwDpfLDIZoEgV
GBljB8WUKhayV5UrR7yq09Wsui6p9f8D6arxOlTxAAA=

-->

</rfc>

