<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.17 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-yg3bp-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="21"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management
  and was specified many years ago. Given the emerging of data models and 
  their deployment in operator's management and control systems, the traditional function of inventory management
  is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for 
  ensuring the network stays healthy, well-planned, and functioning 
  in the operator's network. Network inventory management allows the
  operator to keep track of what physical network devices are staying
  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when 
  to acquire new assets and what is needed, or to decommission old or faulty ones, 
  which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\                             
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-RFC8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro contained-child*  -> ../uuid
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>For state data like admin-state, oper-state and so on, we consider they are related to device hardware management and not hardware inventory. Therefore, they are outside of scope of this document. Same for the sensor-data, they should be defined in some other performance monitoring data models instead of inventory data model.</t>

<t>We re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="comparison-with-openconfig-platform-data-model"><name>Comparison With Openconfig-platform Data Model</name>

<t>Since more and more devices can be managed by domain controller through OpenConfig, to avoid that our inventory data model cannot cover these devices' inventory data, we have compared our inventory data model with the openconfig-platform.yang which is the data model used to manage inventory information in OpenConfig.</t>

<t>Openconfig-platform data model is NE-level and uses a generic component concept to describe its inner devices and containers, which is similar to ietf-hardware model in <xref target="RFC8348"/>. Since we have also reused the component concept of <xref target="RFC8348"/> in our inventory data model, we can compare the component's attributes between openconfig-platform and our model directly , which is stated below:</t>

<texttable title="Comparison between openconfig-platform and inventory data model" anchor="tab-oc">
      <ttcol align='left'>Attributes in oc-platform</ttcol>
      <ttcol align='left'>Attributes in our model</ttcol>
      <ttcol align='left'>remark</ttcol>
      <c>name</c>
      <c>name</c>
      <c>&#160;</c>
      <c>type</c>
      <c>class</c>
      <c>&#160;</c>
      <c>id</c>
      <c>uuid</c>
      <c>&#160;</c>
      <c>location</c>
      <c>location</c>
      <c>&#160;</c>
      <c>description</c>
      <c>description</c>
      <c>&#160;</c>
      <c>mfg-name</c>
      <c>mfg-name</c>
      <c>&#160;</c>
      <c>mfg-date</c>
      <c>mfg-date</c>
      <c>&#160;</c>
      <c>hardware-version</c>
      <c>hardware-rev</c>
      <c>&#160;</c>
      <c>firmware-version</c>
      <c>firmware-rev</c>
      <c>&#160;</c>
      <c>software-version</c>
      <c>software-rev</c>
      <c>&#160;</c>
      <c>serial-no</c>
      <c>serial-num</c>
      <c>&#160;</c>
      <c>part-no</c>
      <c>part-number</c>
      <c>&#160;</c>
      <c>clei-code</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>removable</c>
      <c>is-fru</c>
      <c>&#160;</c>
      <c>oper-status</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>empty</c>
      <c>contained-child?</c>
      <c>If there is no contained child, it is empty.</c>
      <c>parent</c>
      <c>parent-references</c>
      <c>&#160;</c>
      <c>redundant-role</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>last-switchover-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-switchover-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-reason</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>last-reboot-time</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>switchover-ready</c>
      <c>&#160;</c>
      <c>state data</c>
      <c>temperature</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>memory</c>
      <c>&#160;</c>
      <c>performance data</c>
      <c>allocated-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>used-power</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>pcie</c>
      <c>&#160;</c>
      <c>alarm  data</c>
      <c>properties</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>subcomponents</c>
      <c>contained-child</c>
      <c>&#160;</c>
      <c>chassis</c>
      <c>chassis-specific-info</c>
      <c>&#160;</c>
      <c>port</c>
      <c>port-specific-info</c>
      <c>&#160;</c>
      <c>power-supply</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>fan</c>
      <c>&#160;</c>
      <c>Fan is considered as a specific board. And no need to define as a single component</c>
      <c>fabric</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>storage</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage storage on network element</c>
      <c>cpu</c>
      <c>&#160;</c>
      <c>For Optical and IP technology, no need to manage CPU on network element</c>
      <c>integrated-circuit</c>
      <c>board-specific-info</c>
      <c>&#160;</c>
      <c>backplane</c>
      <c>&#160;</c>
      <c>Backplane is considered as a part of board. And no need to define as a single component</c>
      <c>software-module</c>
      <c>&#160;</c>
      <c>TBD</c>
      <c>controller-card</c>
      <c>&#160;</c>
      <c>Controller card is considered as a specific functional board. And no need to define as a single component</c>
</texttable>

<t>As it mentioned in <xref target="reference-RFC8348"/> that state data and performance data are out of scope of our data model, it is same for alarm data and it should be defined in some other alarm data models separately. And for some component specific structures in openconfig-platform, we consider some of them can be contained by our existing structure, such as fan, backplane, and controller-card. And for some of them, there is no need to manage for operators, such as storage and cpu.</t>

<t>Mostly, our inventory data model can cover the attributes from OpenConfig.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-inventory.tree"><![CDATA[
module: ietf-network-inventory
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro rack-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref           leafref
     |              +--ro component-ref    leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro firmware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-references
                 |  +--ro equipment-room-uuid?    leafref
                 |  +--ro ne-uuid?                leafref
                 |  +--ro rack-uuid?              leafref
                 |  +--ro component-references
                 |     +--ro component-reference* [index]
                 |        +--ro index    uint8
                 |        +--ro class?   -> ../../../../class
                 |        +--ro uuid?    -> ../../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-inventory@2022-07-11.yang"><![CDATA[
module ietf-network-inventory {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory";
  prefix ni;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "RFC 8348: A YANG Data Model for Hardware Management.";
  }
  
  import ietf-inet-types {
    prefix inet;
  } 
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2022-07-11 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-01: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2022-03-04 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-00: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2021-11-09 {
    description
      "version 2.0.0";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }

  revision 2021-10-25 {
    description
      "Initial revision.";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }
  
  container network-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "To be added.";
          leaf-list equipment-room-name {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "To be added.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf firmware-rev {
      type string;
      description
        "The vendor-specific firmware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "To be added.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element/ni:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element[ni:uuid"
                  + "=current()/../ne-ref]/ni:components"
                  + "/ni:component/ni:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "To be added.";
    container rack-location {
      description
        "To be added.";
      leaf equipment-room-name {
        type leafref {
          path "/ni:network-inventory/ni:equipment-rooms"
          + "/ni:equipment-room/ni:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf rack-number {
      type uint32;
      description
        "An integer identifier of rack.";
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "To be added.
            
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../ni:uuid";
          }
          description
            "The child components' identifier that are physically 
            contained by this component.";          
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "To be added.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        container parent-references {
          description
            "To be added.";
          leaf equipment-room-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf ne-uuid {
            type leafref {
              path "/ni:network-inventory/ni:network-elements/" +
                   "ni:network-element/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf rack-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:racks/ni:rack/ni:uuid";
            }
            description
              "To be added.";
          }
          container component-references {
            description
              "To be added.";
            list component-reference {
              key index;
              description
                "this list object is used to indicate its
                hierarchial parent components' identifier.
                This hierarchial relation can be found by index 
                parameter. The topest parent component should be 
                0-index.";
              leaf index {
                type uint8;
                description
                  "To be added.";
              }
              leaf class {
                type leafref {
                  path "../../../../ni:class";
                }
                description
                  "To be added.";
              }
              leaf uuid {
                type leafref {
                  path "../../../../ni:uuid";
                }
                description
                  "To be added.";
              }
            }
          }
        }
        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "To be added.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./ni:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./ni:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='10' month='July' year='2022'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models being defined by the IETF to support
   this deployment architecture and specific scenarios relevant for
   Service Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-07'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-actn-poi-applicability-07.txt' type='TXT'/>
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>


  </back>

<!-- ##markdown-source:
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
+JvYO58m2Q9gyb4VkzdaGjAy67CbOtqCYmWRtjMm0X2LKV1RWeRajpGTx8+C
dhDIe+NBAqocGR3+846MFWLyNmik+RTdGjJzk0EI0ZFXwRAwFGbOMiogAkML
q92tnJCgNyrcaevdbJywXvHo9fdg4XRU6PsxcIgt/IaNjy16sBV82QQlY9FO
MXNNp5UyRQ4YxWe3IXiuoI3Ft+fXOuVeK/v7rHCqt2lkk8NS7mZI+VL3dzfm
cIQoxaxjnHlGurcNZ8TlnfM8zrhgbfVu6Npl2464LkvRNRtNHN3DTtRm1xbF
Du/5IjldXHuJ4JBBtaYIweljuxDZNcCNdzDbZEXjZ4Ml7S6R9nwwPm4DkGXx
ETJCF+mOOb2RNpI6rUuXPIs8NVz+4BLWe5Kw5uaVLn4d7IjK7Tjavxixf1bE
DlT5WmazvHeA8VLMML8iHGPH97WmS32IQe0MkZoFoTF1ucDOD9XOv7xxrFs/
feuk/rVNj3TZdXXTltieZXhAf3slNjHwhlV3mH13W223+Ejyz+ZFtkVrn1tK
rqu7NoFeVaeVvkNCLawN/DctQpjTD53+86GELayUc+PJJe6Sm2LSOPHh2LIy
rBsvNmHbOnLx3hBeLdYV7VBoxrIv4uCuuBgzJl1EbWPbOurh2NoOpgFvdc4H
4zGvrVnySLvAu8rgcyKeto4/1W01OSaRW6ZZBsu+Oik3rTs8c8hukhPvf8gW
OcH/h2zROuKyTbtYdIvVnJsl3+Sf9abLd5dRLVnr8UDtvn7Srh4DzSOBrXQn
77R88jSi7Uyl69590eTc20vmo5tx/T991WTzX/tV+9d5rs6TciZgituTvTls
r7akMwBEqmv3qwPefBsc/gKVhkmbTzo2xT4YR19/lYOCSEhDfvPzqPz6q/I3
inT/5tefR9Xi66+qhfzt1obXv1GB33QRTK//668/w5sMnmd9FTOqmLUrjlZf
f7VSj/7P//hfv/6675DSr0VZd1C6w+5QWSc1XEsV07XLCMwT7VwlOCEfct8w
kzyfpm0VQ8eK48xMPpULuLXjR5+Qmd7Zu5ftvX1sqJeAUWcRiDmNuvQMWP1s
OKHB7bOatyQhiRRqN3AJJm8RlEanZ2uHrR1j2Fn+mHJhRmofuvFxFCp3t/8l
5WHeOwJWFvePH3z24PNPPn3w2dtRIeiJ6GOFT7/45JMT8ZT3ji/OH4t7/y6D
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

-->

</rfc>

