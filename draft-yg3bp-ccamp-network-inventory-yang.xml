<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.9 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-yg3bp-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </author>

    <date year="2022" month="July" day="11"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management
  and was specified many years ago. Given the emerging of data models and 
  their deployment in operator's management and control systems, the traditional function of inventory management
  is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part of 
  ensuring the network stays healthy, well-planned, and functioning 
  in the operator's network. Network inventory management allows the
  operator to keep track of what physical network devices are staying
  in the network including relevant software and hardware.</t>

<t>The network inventory management also helps the operator to know when 
  to acquire new assets and what is needed, or to decommission old or faulty ones, 
  which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial hardware inventory information available at PNC level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the PNC South Bound Interface (SBI) towards the network elements rather than at the PNC MPI. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analyzed to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in these diagrams is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\                             
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, the relationship between the rack and network elements is not 1 to 1 nor 1 to n. The network element cannot be the direct parent node of the rack. So there should be n to m relationship between racks and network elements.
And the chassis in the rack should have some reference information to the component.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a Network Element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from multiple Network Elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document which attributes from <xref target="RFC8348"/> are required also for network hardware inventory and whether there are attributes not defined in <xref target="RFC8348"/> which are required for network hardware inventory</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely used by development of systems. It could be globally unique easily.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when maintaining.</t>

<t>Location: location is a common management requirement of operators. This location could be absolute position, e.g. address, or relative position, e.g. port index. Different types of inventory objects require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-from-rfc8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro children* [child-ref]
        |  +--ro child-ref    leafref
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>But we refined some attributes in <xref target="RFC8348"/>, based on some integration experience we had.</t>

</section>
<section anchor="refinement-of-rfc8348"><name>Refinement of RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided an "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher hierarchal level component, they need to retrieve this parent-ref step by step. To reduce this duplicated work, we tend to provide a list of hierarchical parent components' identifier reference.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" in this list which starts from 0 is sort by the hierarchical relationship from topmost component to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component specific and are not suitable to define under the component list node. So we define a choice-case structure for this component-specific extension, which is:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The *-specific-info container is still under discussing, will be enriched in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. Model-name is not quite recognized and we suggest to refine it to part number directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attribute mentioned in above section, rack could have some specific attributes, such as attributes about appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please imaged that the door of rack face to the user):</t>

<figure title="height, width and width of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The attributes for rack includes:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage could be supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. Includes:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: the attributes of network element are still under discussing.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During doing the design of integration with OSS, some efficiency issues have been discovered.  More discussion is needed to be done in the future to address this issue.</t>

<t>Considering relational database is widely used by traditional OSS systems and part of PNCs, the inventory objects are probably saved in different tables. If the generic model is adopted, when doing a full synchronization, PNC needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the PNC &amp; OSS/MDSC processing, which may result in efficiency issue in large scale networks.</t>

<t>We also designed a YANG model which defines the inventory objects directly instead of defining with generic components. There still could be some scalability issues when synchronizing full inventory resource in large scale of networks. This scalability issue is caused by the small transmission capability of HTTP protocol. We think that this scalability should be solved on protocol level instead of some specific data model.</t>

<t>In case there are some other special types of inventory objects could be used in other technologies and have not been recognized by us, we would like to provide a generic model. If we define the inventory objects directly and give them fix hierarchical relationships in YANG model, once there is a new type of inventory object needs to be introduced into the model, we need to break down our YANG model and insert the new one, this is incompatible change which is unacceptable by the developer to implement. In comparison, we only need to augment a new component class and extend some specific attributes for this new inventory if we adopt generic model, which is more acceptable. We think this compatible issue is prior to the efficiency issue mentioned above, therefore, we continue to work on generic component model.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of under the network-element container</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and to have a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analyzed to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-inventory.tree"><![CDATA[
module: ietf-network-inventory
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro rack-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref           leafref
     |              +--ro component-ref    leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro firmware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-references
                 |  +--ro equipment-room-uuid?    leafref
                 |  +--ro ne-uuid?                leafref
                 |  +--ro rack-uuid?              leafref
                 |  +--ro component-references
                 |     +--ro component-reference* [index]
                 |        +--ro index    uint8
                 |        +--ro class?   -> ../../../../class
                 |        +--ro uuid?    -> ../../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-inventory@2022-07-06.yang"><![CDATA[
module ietf-network-inventory {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory";
  prefix ni;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "RFC 8348: A YANG Data Model for Hardware Management.";
  }
  
  import ietf-inet-types {
    prefix inet;
  } 
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2022-07-06 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-01: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2022-03-04 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-00: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2021-11-09 {
    description
      "version 2.0.0";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }

  revision 2021-10-25 {
    description
      "Initial revision.";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }
  
  container network-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "To be added.";
          leaf-list equipment-room-name {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "To be added.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf firmware-rev {
      type string;
      description
        "The vendor-specific firmware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "To be added.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element/ni:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element[ni:uuid"
                  + "=current()/../ne-ref]/ni:components"
                  + "/ni:component/ni:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "To be added.";
    container rack-location {
      description
        "To be added.";
      leaf equipment-room-name {
        type leafref {
          path "/ni:network-inventory/ni:equipment-rooms"
          + "/ni:equipment-room/ni:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf rack-number {
      type uint32;
      description
        "An integer identifier of rack.";
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "To be added.
            
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        uses location-grouping;
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../ni:uuid";
          }
          description
            "The child components' identifier that are physically 
            contained by this component.";          
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "To be added.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        container parent-references {
          description
            "To be added.";
          leaf equipment-room-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf ne-uuid {
            type leafref {
              path "/ni:network-inventory/ni:network-elements/" +
                   "ni:network-element/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf rack-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:racks/ni:rack/ni:uuid";
            }
            description
              "To be added.";
          }
          container component-references {
            description
              "To be added.";
            list component-reference {
              key index;
              description
                "this list object is used to indicate its hiarchical 
                parent components' identifier.
                This hiarchical relation can be found by index 
                parameter. The topest parent component should be 
                0-index.";
              leaf index {
                type uint8;
                description
                  "To be added.";
              }
              leaf class {
                type leafref {
                  path "../../../../ni:class";
                }
                description
                  "To be added.";
              }
              leaf uuid {
                type leafref {
                  path "../../../../ni:uuid";
                }
                description
                  "To be added.";
              }
            }
          }
        }
        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "To be added.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container container some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container container some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./ni:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container container some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./ni:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container container some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini'>
	 <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier'>
	 <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli'>
	 <organization>Ericsson</organization>
      </author>
      <date day='10' month='July' year='2022'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models being defined by the IETF to support
   this deployment architecture and specific scenarios relevant for
   Service Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-07'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-actn-poi-applicability-07.txt' type='TXT'/>
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

